{"meta":{"title":"终末地铁","subtitle":"","description":null,"author":"右赤","url":"http://youkiiiiii.github.io","root":"/"},"pages":[{"title":"分类","date":"2019-05-03T04:03:35.000Z","updated":"2022-07-25T20:24:10.161Z","comments":true,"path":"categories/index.html","permalink":"http://youkiiiiii.github.io/categories/index.html","excerpt":"","text":""},{"title":"关于","date":"2021-11-30T15:23:14.000Z","updated":"2025-04-17T11:45:56.820Z","comments":true,"path":"about/index.html","permalink":"http://youkiiiiii.github.io/about/index.html","excerpt":"","text":"你好，我是右赤。我试图寻找一种温和的生活方式。本站随缘更新，内容以记录生活为主，也会有不多的灵感和读书观影笔记。"},{"title":"list","date":"2024-09-27T12:05:06.000Z","updated":"2024-09-27T12:05:06.615Z","comments":true,"path":"list/index.html","permalink":"http://youkiiiiii.github.io/list/index.html","excerpt":"","text":""},{"title":"标签","date":"2022-07-16T04:03:35.000Z","updated":"2022-07-25T20:23:42.137Z","comments":true,"path":"tags/index.html","permalink":"http://youkiiiiii.github.io/tags/index.html","excerpt":"","text":""},{"title":"传送门","date":"2019-05-03T04:03:35.000Z","updated":"2022-07-25T20:24:22.432Z","comments":true,"path":"friends/index.html","permalink":"http://youkiiiiii.github.io/friends/index.html","excerpt":"","text":""},{"title":"index","date":"2024-09-27T12:05:01.000Z","updated":"2024-09-27T12:05:01.268Z","comments":true,"path":"index/index.html","permalink":"http://youkiiiiii.github.io/index/index.html","excerpt":"","text":""},{"title":"文章","date":"2025-03-09T20:18:43.933Z","updated":"2025-03-09T20:18:43.933Z","comments":true,"path":"articles/index.html","permalink":"http://youkiiiiii.github.io/articles/index.html","excerpt":"","text":""}],"posts":[{"title":"新媒体运营投流+数据分析笔记","slug":"新媒体运营投流笔记","date":"2025-05-20T02:50:26.000Z","updated":"2025-05-26T11:03:24.625Z","comments":true,"path":"2025/05/20/新媒体运营投流笔记/","permalink":"http://youkiiiiii.github.io/2025/05/20/%E6%96%B0%E5%AA%92%E4%BD%93%E8%BF%90%E8%90%A5%E6%8A%95%E6%B5%81%E7%AC%94%E8%AE%B0/","excerpt":"投流不是烧钱游戏，而是测试—分析—优化—再投的科学实验。","text":"投流不是烧钱游戏，而是测试—分析—优化—再投的科学实验。 投流基本步骤要点 计划组搭建 投流平台 小红书 投流建议 参考来源 投流基本步骤要点 流程阶段 步骤问题 方法要点 注意事项&amp;技巧 前期准备 账号健康度检测 小红书在设置—创作者中心—社区规范中查看 出现内容违规、限流警告等就暂缓投流，先停更3天或申诉 抖音在创作者服务中心—账号健康分中查看 健康分低于80不能投抖＋，建议养号一周、规避诱导点赞行为 无违规、无限流、内容有一定基础数据 播放量异常时，投30块钱检测能否正常投出去 内容测试 A&#x2F;B测试 一个内容多个版本（文案封面剪辑） 同一主题多形式对比，找出转化最高的版本 小额投放 先用小预算跑内容（30元） 给内容打标签，如果转化差直接停掉 定向投放 精准人群 年龄&#x2F;性别&#x2F;城市&#x2F;兴趣标签等细分投放 小红书更适合垂类兴趣人群，抖音可尝试广泛人群 设置预算 起投可选日预算or总预算，结合目标设置 初期每天100—300元即可，视效果调整 投放时间段 避开低活跃时段 推荐：中午11—14点，晚上7—10点 数据监控 实时监控 查看播放量、完播率、点击率、评论、私信等 每4小时复盘一次数据，决定是否加投&#x2F;停投 数据维度复盘 看CTR（点击率）、CVR（转化率）、ROI（回报率） 花钱不一定能见效，转化才是硬道理 优化与二次投放 高效优化 替换封面&#x2F;标题&#x2F;人群定向&#x2F;落地页 尽量不要频繁修改内容，影响流量 二次投放 表现好的内容再投一次or拆成短版本再投 好内容可以多次利用 常见问题 播放量多但转化不好 内容吸睛，问题出现在产品部分 调整落地页&#x2F;产品介绍，通过贩卖焦虑等方法提高信任感 点击率高但停留低 前几秒吸睛，但后续无看点 调整内容结构和脚本节奏 转化率低但互动多 评论多但无下单&#x2F;私信 优化行动引导（如引导私信领资料&#x2F;去其他平台等） 预算消耗太快但没效果 投放策略不精准，浪费曝光 控制每日预算，分时段测试，注重精准人群设置 投流被限或无展现 内容或投放设置触发平台限制 内容不要有敏感词、诱导点赞、太直白的价格信息，容易被限 监测优化 点击率 小红书：点击率≥5%合格，≥10%优秀;抖音：前2秒跳出率≤40%合格，≤30%优秀，≤20％爆款 优化标题封面钩子 完播率 完播率≥40％达标，≥50%优秀，≥60％热门;5秒完播率≤40%合格，≤50%优秀，≤60％热门 节奏慢、剪辑拖沓，优化视频节奏 互动率 ≥3％达标，≥5％为活跃内容 引导用户评论，通过设问&#x2F;制造冲突话题（婆媳、性别对立…）等方法 需注意 不同行业平台指标不同，这里只给出参考数据 多通过自行搜索和参考同行（达多多蝉妈妈等，找同一类型，粉丝比自己大一个等级的，不要追求粉丝过多，因为粉丝多人群画像会更广泛）分析适合自己赛道的数值 计划组搭建投流平台小红书 小红书投放工具对比 薯条 口碑通 乘风 聚光 聚光Lite 蒲公英 千帆 产品定位 内容加热工具（类似于DOU+） 企业版薯条 电商投放工具，理解为干帆推广模块独立 综合广告投放平台（类似于简版巨量引擎） 聚光移动端的简化版本 与博主内容合作平台 电商经营平台（立足转化数据，提升站内商品成交效率） 适合用户 博主、素人之类的中小用户 品牌方 商家&#x2F;个人店（小红书闭环成交） 有获客需求的商家（无线上成交） 中小商家 品牌方 商家&#x2F;个人店（小红书闭环成交） 是否有赞助&#x2F;广告标识 无 无 无 有 有 有 有 推广目的 曝光、互动（贵） 曝光、互动 曝光、推成交、推ROI 客资收集、互动 客资收集、互动 种草 曝光、成交，ROI稳定（约1.5） 主要的应用场景 测笔记:测试笔记点击率&gt;7%；测试账号笔记是否违规；爆文加热；旧爆款笔记流量停滞下滑时，重新探索新用户；投放笔记测试 加热优质素人笔记 笔记带货（素材）；直播间带货(直播间) 客资&#x2F;开口&#x2F;表单；互动(比薯条便宜) 客资&#x2F;开口&#x2F;表单 让优质博主发现品牌新卖点；向博主的粉丝种草 笔记带货（素材）、直播间带货 优点 门槛低预算低 笔记内容更真实真诚（借助更客观的第三方力量，提高品牌内容的传播范围和影响力） 有保价 用户精准（只要花钱能找到你想要的人） 门槛更低 直接对话用户（利用达人粉丝精准实现人群扩张）、报备（交保护费限制少） 有保价 缺点 无效果承诺；不支持广告营销内容投放 需要品牌有UGC（一定数量的用户生成内容）的积累 对素材（CTR&gt;10%）和直播间要求极高 门槛高；烧预算 功能较聚光弱很多 费用高（平台收取中介费用） 对素材和直播要求高；操作门槛高 薯条 从推广目标上看，一种是用薯条提升笔记的曝光量；另一种是来提升笔记的互动量。但用薯条投互动，成本会偏高，不如用聚光投划算。 可以用薯条来测试和优化笔记的封面标题。点击率&#x3D;阅读量&#x2F;曝光量，如果点击率小于7%，说明需要优化封面标题。 口碑通 登录聚光在工具一栏，可以看到口碑通的入口。 口碑通有提供UGC笔记榜单，从中选择10-15篇笔记，建议最好投放24—48h，进行测试。在新品上线阶段，选择以阅读为目标进行投放，提升曝光；在爆品阶段，选择点赞和收藏为投放目标，放大正向口碑。 必须是在90天内发布，不违反社区规定、无挂车，发布者非未成年人，且笔记本身无过强营销感的笔记才具备被加热条件。 非常适合新品种草、新店推广、人群破圈（IP联动，品牌大事件等打造话题引发讨论）。 乘风 千帆侧重作为商家经营阵地类型淘宝的千牛，专注在店铺、商品、笔记、活动的经营上。 目前乘风的投产比高于聚光，推测新工具处于红利期。 其实我觉得乘风是参考公众号推文里的软广，但可以先尝试观察效果… 聚光 适用于有一定专业广告投放能力，且拥有更多投放需求的企业客户。 适合有较高预算，并希望在小红书上实现长期、稳定营销效果的品牌方。 聚光lite 门槛比聚光低，不需要预算充值就可以使用，操作也更加简单。 是专门为中小商家量身定制的快捷投放工具。 蒲公英 相比水下笔记（指绕开平台，品牌方和博主私下达成的合作笔记），限制更少，不容易违规。 精准匹配：基于达人的粉丝量、内容调性、垂类标签等维度，为品牌提供精准的匹配服务。 人群扩张：充分利用达人已有的粉丝声量，为品牌营销破圈。 千帆 笔记带货，素材ctr10%以上更具竞争力，10%以下烧不动 直播带货roi，手动配置，大部分1.5是极限，跑得越少roi越大 投流建议 做内容矩阵：1条爆款内容可以拆成图文版+视频版+不同节奏多个版本来投，别每次都重新拍。 投流别脱离运营：投流是放大器，内容本身就要好+符合账号调性。 周期性总结复盘：每月整理一次哪类内容投得好，受众是谁，花的钱值不值。 可复制的爆款模型：总结出“投得动”的标题、结构、脚本，后面用这个模板继续做内容。 抖+兴趣标签和达人相似只选其中之一，投达人相似时需考虑同内容是否比对方更有差异性&#x2F;竞争力。 第一笔投流用兴趣标签&#x2F;达人相似给视频打标签（小额度预算），后续追投需换成系统自动智能投放最大化拉大曝光量（建议大额度预算，投放时间越长越好）。 参考来源 宋星的数字观 运营干货：一文讲清小红书各大营销工具的差异、特点及玩法","categories":[{"name":"笔记","slug":"笔记","permalink":"http://youkiiiiii.github.io/categories/%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"文案","slug":"文案","permalink":"http://youkiiiiii.github.io/tags/%E6%96%87%E6%A1%88/"},{"name":"新媒体运营","slug":"新媒体运营","permalink":"http://youkiiiiii.github.io/tags/%E6%96%B0%E5%AA%92%E4%BD%93%E8%BF%90%E8%90%A5/"},{"name":"投流","slug":"投流","permalink":"http://youkiiiiii.github.io/tags/%E6%8A%95%E6%B5%81/"},{"name":"数据分析","slug":"数据分析","permalink":"http://youkiiiiii.github.io/tags/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/"}]},{"title":"hexo d 部署博客时出现 \"spawn failed\" 解决办法","slug":"hexo-d部署博客时出现spawn failed解决办法","date":"2025-05-19T14:38:38.000Z","updated":"2025-05-12T03:40:53.254Z","comments":true,"path":"2025/05/19/hexo-d部署博客时出现spawn failed解决办法/","permalink":"http://youkiiiiii.github.io/2025/05/19/hexo-d%E9%83%A8%E7%BD%B2%E5%8D%9A%E5%AE%A2%E6%97%B6%E5%87%BA%E7%8E%B0spawn%20failed%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/","excerpt":"今天在部署hexo博客时，hexo d后出现”Error: Spawn failed“报错日志。这表明在执行hexo d时，Hexo无法通过SSH连接到GitHub，导致博客文件部署失败，新文章未能推送到远程仓库。具体解决办法如下。","text":"今天在部署hexo博客时，hexo d后出现”Error: Spawn failed“报错日志。这表明在执行hexo d时，Hexo无法通过SSH连接到GitHub，导致博客文件部署失败，新文章未能推送到远程仓库。具体解决办法如下。 报错日志 解决办法 测试 SSH 连接 检查网络和防火墙 使用 SSH 过 443 端口 重新部署 报错日志报错日志一般为以下内容： 123456FATAL Something&#x27;s wrong. Maybe you can find the solution here: https://hexo.io/docs/troubleshooting.htmlError: Spawn failed at ChildProcess.&lt;anonymous&gt; (D:\\Blog\\node_modules\\hexo-deployer-git\\node_modules\\hexo-util\\lib\\spawn.js:51:21) at ChildProcess.emit (node:events:519:28) at cp.emit (D:\\Blog\\node_modules\\cross-spawn\\lib\\enoent.js:34:29) at ChildProcess._handle.onexit (node:internal/child_process:294:12) 解决办法测试 SSH 连接 打开Git Bash（或 CMD&#x2F;PowerShell），运行： 1ssh -T git@github.com 可能结果 成功：输出 Hi ! You’ve successfully authenticated, but GitHub does not provide shell access.，表示SSH配置正确，问题可能出在网络或Hexo配置。 失败：输出 ssh: connect to host github.com port 22: Connection refused 或类似错误，继续以下步骤。 检查网络和防火墙 测试网络连接，运行： 1ping github.com 如果返回类似Reply from 140.82.121.4，表示网络可达GitHub。 如果失败，检查 DNS 或网络设置。 检查22端口，运行： 1telnet github.com 22 成功：显示 Connected to github.com 或类似信息。 失败：显示 Connection refused 或 Connection timed out 表明 22 端口被防火墙或 ISP 屏蔽。我在此处提示报错： 1234567telnet : 无法将“telnet”项识别为cmdlet、函数、脚本文件或可运行程序的名称。请检查名称的拼写，如果包括路径，请确保路径正确，然后再试一次。所在位置 行:1 字符: 1+ telnet github.com 22+ ~~~~~~ + CategoryInfo : ObjectNotFound: (telnet:String) [], CommandNotFoundException + FullyQualifiedErrorId : CommandNotFoundException 主要问题：ssh: connect to host github.com port 22: Connection refused。ping github.com结果显示网络可以访问GitHub，但SSH连接失败，表明22端口可能被防火墙或网络限制屏蔽。 使用 SSH 过 443 端口 编辑 SSH 配置文件打开（或新建）C:\\Users&lt;你的用户名&gt;.ssh\\config，并添加： 123456Host github.com HostName ssh.github.com User git Port 443 PreferredAuthentications publickey IdentityFile ~/.ssh/id_rsa 保存并关闭。 测试连接，运行： 1ssh -T git@github.com 我这里提示的是： 123The authenticity of host &#x27;[ssh.github.com]:443 ([20.205.243.160]:443)&#x27; can&#x27;t be established.......一串类似密匙和文件路径的内容（避免泄露隐私就不显示出来了）Are you sure you want to continue connecting (yes/no/[fingerprint])? 直接输入yes并按回车键即可解决问题。 重新部署接下来应该就没问题了，直接运行： 1hexo cl &amp;&amp; hexo g &amp;&amp; hexo d 我到这里就已经解决所有问题了，但不保证该方法能够完全有效，可以先尝试看看。","categories":[{"name":"教程","slug":"教程","permalink":"http://youkiiiiii.github.io/categories/%E6%95%99%E7%A8%8B/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"http://youkiiiiii.github.io/tags/hexo/"}]},{"title":"英语时态笔记","slug":"英语时态笔记","date":"2025-05-07T05:22:50.000Z","updated":"2025-05-10T14:28:02.406Z","comments":true,"path":"2025/05/07/英语时态笔记/","permalink":"http://youkiiiiii.github.io/2025/05/07/%E8%8B%B1%E8%AF%AD%E6%97%B6%E6%80%81%E7%AC%94%E8%AE%B0/","excerpt":"英语有12种常见时态，可以分成3个主要的时间点：过去、现在、未来。每个时间点可以再细分成4种情况：一般、进行、完成、完成进行。","text":"英语有12种常见时态，可以分成3个主要的时间点：过去、现在、未来。每个时间点可以再细分成4种情况：一般、进行、完成、完成进行。 表格总览 详细解释 如何选择合适的时态 总结 表格总览 时态 例句 句意 一般现在时 I eat lunch at 12. 我每天12点吃午饭（习惯） 现在进行时 I am eating lunch now. 我现在正在吃午饭（此刻正在做） 现在完成时 I have eaten lunch. 我已经吃过午饭了（过去发生，对现在有影响） 现在完成进行时 I have been eating for 10 minutes. 我已经吃了10分钟了（动作从过去开始，一直持续到现在） 一般过去时 I ate lunch at 12. 我昨天12点吃了午饭（过去发生的事） 过去进行时 I was eating lunch when you called. 你打电话时，我正在吃午饭（过去某个时间正在进行） 过去完成时 I had eaten lunch before 11 PM. 在下午一点之前，我已经吃了午饭（过去的过去） 过去完成进行时 I had been eating for 10 minutes when he arrived. 他来的时候，我已经吃了10分钟了（过去某个动作一直持续） 一般将来时 I will eat lunch at 12. 我明天12点会吃午饭（将来发生的事） 将来进行时 I will be eating lunch at 12. 明天12点我正在吃午饭（将来某个时间正在进行） 将来完成时 I will have eaten lunch by 1 PM. 到下午1点时，我会已经吃完午饭（将来的过去） 将来完成进行时 I will have been eating for 10 minutes by 12:10. 到12点10分，我将已经吃了10分钟（将来某个动作会持续） 详细解释 一般时（表示“某个时间点发生的动作”） 适用于：描述习惯、事实、过去发生的事情和计划等。 时态 例句 句意 一般现在时 I go to school every day. 我每天上学（习惯） 一般过去时 I went to school yesterday. 我昨天去上学了（过去发生） 一般将来时 I will go to school tomorrow. 我明天会去上学（将来发生） 进行时（表示“正在做的事情”） 适用于：表示“正在进行的动作”，比如你此时此刻正在做的事情，或者某个时间点正在发生的事。 时态 例句 句意 现在进行时 I am watching TV now. 我现在正在看电视。 过去进行时 I was watching TV when you called. 你打电话时，我正在看电视。 将来进行时 I will be watching TV at 8 PM. 明晚8点，我正在看电视。 完成时（表示“动作已经完成，对现在&#x2F;过去&#x2F;未来有影响”） 适用于：描述已经完成的事情，强调结果，比如“我已经吃过饭”或者“到那个时候我会已经完成作业”。 时态 例句 句意 现在完成时 I have finished my homework. 我已经完成作业了（结果是现在作业已经做完） 过去完成时 I had finished my homework before dinner. 晚饭前，我已经做完作业（过去的过去） 将来完成时 I will have finished my homework by 8 PM. 到晚上8点，我会已经完成作业（将来的过去） 完成进行时（表示“动作从过去开始，一直持续”） 适用于：强调动作的连续性，比如“已经学了2个小时，还没结束”。 时态 例句 句意 现在完成进行时 I have been studying for 2 hours. 我已经学习了2个小时（从过去一直到现在） 过去完成进行时 I had been studying for 2 hours before dinner. 晚饭前，我已经学习了2个小时（过去的持续动作） 将来完成进行时 I will have been studying for 2 hours by 8 PM. 到晚上8点，我将已经学习了2个小时（未来的持续动作） 如何选择合适的时态 讲事实、习惯、真理 → 一般现在时（I eat lunch at 12.） 描述过去的事 → 一般过去时（I ate lunch at 12.） 讲未来的计划 → 一般将来时（I will eat lunch at 12.） 描述正在发生的事 → 进行时（I am eating lunch now.） 强调已经完成的事 → 完成时（I have eaten lunch.） 强调动作连续时间 → 完成进行时（I have been eating for 10 minutes.） 总结英语时态主要就是这几个核心概念： 一般时：简单描述“发生”了什么。 进行时：强调“正在进行”。 完成时：强调“已经完成”。 完成进行时：强调“持续进行的时间”。 建议先掌握一般时+进行时，然后再慢慢学习完成时和完成进行时。","categories":[{"name":"笔记","slug":"笔记","permalink":"http://youkiiiiii.github.io/categories/%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"英语","slug":"英语","permalink":"http://youkiiiiii.github.io/tags/%E8%8B%B1%E8%AF%AD/"},{"name":"英语时态","slug":"英语时态","permalink":"http://youkiiiiii.github.io/tags/%E8%8B%B1%E8%AF%AD%E6%97%B6%E6%80%81/"}]},{"title":"《爆款小红书：从零到百万粉丝的玩赚策略》笔记整理","slug":"《爆款小红书：从零到百万粉丝的玩赚策略》笔记","date":"2025-04-27T12:57:21.000Z","updated":"2025-05-09T23:01:44.349Z","comments":true,"path":"2025/04/27/《爆款小红书：从零到百万粉丝的玩赚策略》笔记/","permalink":"http://youkiiiiii.github.io/2025/04/27/%E3%80%8A%E7%88%86%E6%AC%BE%E5%B0%8F%E7%BA%A2%E4%B9%A6%EF%BC%9A%E4%BB%8E%E9%9B%B6%E5%88%B0%E7%99%BE%E4%B8%87%E7%B2%89%E4%B8%9D%E7%9A%84%E7%8E%A9%E8%B5%9A%E7%AD%96%E7%95%A5%E3%80%8B%E7%AC%94%E8%AE%B0/","excerpt":"对于小红书运营新手来说，这本书还是有一定参考价值，基础内容比较全面。不足之处也非常明显：内容偏水，干货较少，并且部分方法已不适用于平台新规。","text":"对于小红书运营新手来说，这本书还是有一定参考价值，基础内容比较全面。不足之处也非常明显：内容偏水，干货较少，并且部分方法已不适用于平台新规。 序言 第一章 内容创作的核心原则 第一节 做内容不要自我陶醉 第二节 爆款都是重复的 第三节 要非常专一 第二章 定位与聚焦 第一节 “定位三问法”：找到你的精准定位 第二节 聚焦法：先发散再聚焦 第三章 打造个人品牌 第一节 昵称：用户认识你的第一张名片 第二节 头像：你的头像可能价值百万 第三节 主页：直观清晰体现你的价值 第四节 简介：一句话讲明你是做什么的 第四章 爆款笔记的打造 第一节 选题：建立你的爆款选题库 第二节 标题：8种模式+“四步法”+“三段式”模板 第三节 图片：利用手机软件轻松搞定封面和内页图 第四节 内容：三段式模板打造爆款 第五章 流量推荐机制 第一节 推荐机制：小红书流量推荐的秘密 第二节 发布时间：抓准用户活跃时间 第三节 增加互动：提升用户黏性 第四节 等级体系：提升账号权重 第六章 复盘与优化 第一节 复盘步骤：从思维推演到行动 第二节 品牌复盘：细节决定成败 第三节 个人复盘：规划运营方向 第七章 变现：四大变现形式 第一节 商业广告变现 第二节 带货变现 第三节 私域引流变现 第四节 课程变现 第八章 小红书团队管理 第一节 招聘理念：小范围快速试错 第二节 招聘流程：三步搞定 第三节 拆解培训：三遍拆解法 第四节 “赛马文化”：分裂与归一 第五节 内部管理：头、中、尾分部管理 第六节 薪酬绩效：低底薪+高绩效 序言 爆款都是重复的 研究领域内最火的100篇笔记，找到高频头部选题，模仿创作以提升爆款概率。 用量来拼成功的概率 70%模仿爆款内容 × 足够多试验 &#x3D; 100%爆款。 给用户一个关注你的理由 昵称建议：昵称 + 能为用户提供的内容（如“昵称+领域”）。 第一章 内容创作的核心原则第一节 做内容不要自我陶醉 模仿爆款 模仿爆款笔记，保留70%相似度，调整细节（如标题、字体）。 重点：从用户角度出发，解决用户需求，提供“即看即用”的内容。 找到自我表达与用户需求的交集 内容需与用户相关，且对用户有价值。 用户只关心需求是否被满足 内容完美度次要，满足用户需求是关键。 本节小结 避免自我陶醉。 找到自我表达与用户需求的交集。 优先满足用户需求，而非追求内容完美。 第二节 爆款都是重复的 拆解与分析爆款 从选题、标题、封面、内容、排版等方面拆解爆款，寻找共性。 融入自身笔记，模仿创作。 本节小结 只有见过爆款，才能做出爆款。 70%模仿爆款 × 足够多试验 &#x3D; 100%爆款。 第三节 要非常专一 专注细分领域 选择一个细分领域做到极致，成为领域头部。 让用户一眼明白你的定位和价值。 本节小结 专一明确定位，给用户直接的关注理由。 坚持单一领域，用户更喜欢“单一”的你。 第二章 定位与聚焦第一节 “定位三问法”：找到你的精准定位 定位三问法 你被人夸过什么&#x2F;哪些方面？ 别人是否愿意为这些优点付费？ 你为什么东西付出最多？ 本节小结 精准定位：将最擅长的事情作为核心方向，练到极致。 通过“定位三问法”找准定位，深入用户印象。 第二节 聚焦法：先发散再聚焦 10-3-1聚焦法 10：根据定位三问法，选3个擅长的领域，各找10个爆款选题，尝试30篇日更内容。 3：分析数据，筛选最火的3篇笔记，聚焦其领域，深挖细分关键词。 1：确定最火的1篇笔记选题，垂直创作，持续模仿爆款。 综合评估 按兴趣、能力、市场需求、变现能力打分，确定1-2个主攻领域和次级领域。 从问题到人群 聚焦一类问题，分析目标人群，再针对其需求创作内容。 示例：博士分享抵抗焦虑内容，吸引硕博生、迷茫本科生、焦虑宝妈等。 本节小结 敬畏数据，从用户思维出发，避免盲目输出。 10-3-1聚焦法：由浅入深，靠近擅长领域。 先发散寻找热爱与用户喜好的交集，再聚焦垂直领域。 第三章 打造个人品牌第一节 昵称：用户认识你的第一张名片 昵称设计原则 爆款昵称 &#x3D; 简单好记的昵称 + 内容细分领域（如“维维的小衣橱”）。 避免英语昵称，降低用户理解成本。 领域关键词示例 美食领域：“昵称+爱美食”“昵称+探店+地域”（如“探店魔都”）。 学习类：“昵称+爱学习”“数学学霸+昵称”。 健身类：“昵称+爱健身”“健身达人+昵称”。 本节小结 昵称需让用户快速了解你是谁、做什么、有何价值。 爆款昵称公式：简单昵称 + 细分领域。 昵称重复无妨，关键是清晰定位。 第二节 头像：你的头像可能价值百万 头像选择 建议使用真实本人照片，拉近用户距离。 背景简单，可用职业照或生活照。 头像的好处 真实+好看：增加亲切感、品牌价值、可识别度和信任度。 本节小结 头像代表个人形象，价值巨大。 选用真实+好看的头像，提升用户好感。 动漫或品牌标志头像可另辟蹊径，增加识别度。 第三节 主页：直观清晰体现你的价值 主页设计 一句话描述定位，搭配符合人设的唯美图片和口号。 图片需契合定位，长宽比5:4，注意颜色变暗和放大效果。 推荐图片软件 少女壁纸、堆糖、每日壁纸杂志、WalP、Pexels、壁纸精选。 本节小结 主页是体现价值的广告位，需清晰描述定位。 推荐6个图片软件，辅助主页设计。 注意主页图尺寸、颜色和放大细节。 第四节 简介：一句话讲明你是做什么的 简介作用 快速展示人设，增强用户信任感和认可度。 简介类型 我很专业：数据化描述 + 具体领域定位，添加emoji分层。 示例：职位+年限+奖项+帮助人数+领域内容。 我很特别：高级文案 + 共情话术，适合有影响力者。 我很厉害：一句话概括经历，抛出悬念，适合头部博主。 本节小结 专业简介：数据化+领域定位，清晰明了。 特别简介：差异化文案，适合有特殊经历者。 厉害简介：概括经历，吸引关注，适合头部博主。 第四章 爆款笔记的打造第一节 选题：建立你的爆款选题库 选题方法 10-3-1聚焦法：选3个领域，每领域10个爆款选题，尝试30篇，筛选3篇最火，聚焦1个最优选题。 关键词搜索：搜索细分关键词（如“亲子装”而非“童装”），模仿热门笔记。 高赞评论：挖掘评论中的用户需求，结合原爆款优化创作。 对标博主：收集同领域博主爆款选题，避免冷门选题。 站外平台：从知乎、B站等平台找高热度选题，改编为小红书内容。 爆款定义 点赞+收藏+评论总和 &gt; 5000。 博主爆款选题库模板 本节小结 爆款选题靠数据定义（互动量&gt;5000）。 10-3-1聚焦法建立选题库，模仿爆款。 通过关键词、高赞评论、对标博主、站外平台优化选题。 第二节 标题：8种模式+“四步法”+“三段式”模板 8种标题模式 用数字凸显价值（如“7天瘦10斤”）。 体现实用性（如“如何停止胡思乱想”）。 惊喜优惠（如“9块钱宝藏好物”）。 制造戏剧冲突（如“无肉不欢瘦20斤”）。 激发好奇心（如“时间管理真的有用吗”）。 对比法则（如“比红糖水管用100倍”）。 对号入座（如“双鱼座的小怪癖”）。 针对地域&#x2F;人群（如“成都三天攻略”）。 四步法取标题 找爆款笔记 → 提取关键词 → 合并成标题 → 添加表情。 三段式模板 教育领域： 第一段：学校+人物+动作（如“清华博士说漏嘴”）。 第二段：假设场景（如“孩子上小学”）。 第三段：动作+名词+结果（如“死磕6张图中考满分”）。 知识归纳： 第一段：学段+学科（如“小学数学”）。 第二段：年级+知识点（如“三年级上册知识点”）。 第三段：引导收藏（如“家长必收藏”）。 情感领域： 第一段：人物+动作+数字（如“情侣聊的10个”）。 第二段：名词（如“话题”）。 第三段：附加词（如“请转给对象”）。 本节小结 8种标题模式吸引用户点击。 四步法高效打造标题。 三段式模板解决教育、情感领域标题难题。 第三节 图片：利用手机软件轻松搞定封面和内页图 爆款封面公式 爆款封面 &#x3D; 拼图 + 花字。 使用鲜艳颜色，重点用红色突出，字体大而清晰。 效率窍门 制作3-5版图片模板，替换标题和文字，节省时间。 本节小结 爆款封面 &#x3D; 拼图 + 花字。 用美图秀秀拼图+加文字，或稿定设计制作内页图。 模板化做图提升效率。 第四节 内容：三段式模板打造爆款 开头 重复关键词，建立人设与内容联系，使用强调词。 示例模板：用户痛点+解决方法+权威背书。 中间 百度搜索关键词，提取200-500字内容。 加过渡句、表情、段前“·”分隔。 结尾 号召点赞、收藏、互动，@官方号，带高讨论度话题。 排版注意 字数控制在500-800字。 适当分段，善用表情。 本节小结 开头重复关键词，中间提取优质内容，结尾引导互动。 排版注重字数、分段和表情。 第五章 流量推荐机制第一节 推荐机制：小红书流量推荐的秘密 中心化分发 笔记发布后，平台根据标签和高频词推荐给潜在用户，数据表现决定是否进入更大流量池。 四大流量入口 关注：推送已关注博主内容。 发现：基于用户喜好（点赞收藏内容的共同点&#x2F;关键词）推荐。 位置：同城推荐，适合本地业务。 搜索：依赖关键词优化。 三大推荐逻辑 个性化推荐：初始流量100-300，数据好则进入更大流量池。 社交裂变：点赞（笔记被博主点赞，也会被推荐给这个博主的粉丝，所以可多互关同领域博主）、收藏分享过万、浏览过百万可获额外曝光。 搜索关键词：优化行业领域、细分领域、产品营销（分析竞品）、营销需求关键词。 如何选用关键词 按搜索热度。 按内容贴合度。 按关键词布局。 关键词布局 标题突出关键词。 正文重复关键词。 图片添加标签。 结尾强调关键词+话题。 本节小结 小红书采用中心化分发模式。 四大流量入口：关注、发现、位置、搜索。 三大推荐逻辑：个性化、社交裂变、搜索关键词。 关键词布局提升曝光度。 第二节 发布时间：抓准用户活跃时间 用户活跃高峰 早班高峰：6-8点。 午休高峰：11-13点。 下班高峰：16-18点。 睡前高峰：20点-次日1点。 本节小结 用户活跃高峰决定笔记曝光量。 四个高峰期：早班、午休、下班、睡前。 第三节 增加互动：提升用户黏性 检查收录 发布5-10分钟后，搜索笔记关键词，确认是否被收录。 第四节 等级体系：提升账号权重 账号等级与权重 等级越高，推荐流量越多。 通过完成任务（如点赞、评论、收藏）提升等级。 第六章 复盘与优化第一节 复盘步骤：从思维推演到行动 五大步骤 回顾目标：检查量化数据（如涨粉数、爆款笔记数）。 比对结果：对比当前与历史数据，注意变量设置、相关性和采集标准。 深度提问：多问“为什么”，找到问题根源。 总结经验：记录实践经验，增强信心。 规划行动：制定不超过3条行动计划，明确优先级。 本节小结 复盘围绕数据目标展开。 五大步骤：回顾、比对、提问、总结、规划。 第二节 品牌复盘：细节决定成败 以涨粉为目标 回顾目标：如粉丝从1.1万增至2.5万，每周增538人。 对比结果：分析发布量、阅读量、转粉率。 深度提问：关注平均阅读量、爆款创作、数据标准。 总结经验：增加发布量促进涨粉，内外发力提升质量。 规划行动：维持发布量，重点打造爆款笔记。 以关键词投放为目标 回顾目标 1个月发布80篇带关键词笔记（官方号20篇、矩阵号50篇、达人号10篇）。 计划爆款（互动量&gt;300）20篇（官方号4篇、矩阵号10篇、达人号6篇）。 对比结果 发布110篇（官方号21篇、矩阵号69篇、达人号20篇）。 爆款9篇（官方号0篇、矩阵号5篇、达人号4篇）。 超额完成发布量，爆款数不足。 矩阵号说明 横向：同一IP定位，多平台运营（如小红书、抖音、B站），覆盖广。 纵向：同一平台，多定位账号（如科普、测评、vlog），拓宽受众。 深度提问 爆款不足原因 文案吸引力 分发问题 总结经验 搭建爆款素材库，分类分析爆款原因。 加大爆款共性研究，提升内容创作力度。 第三节 个人复盘：规划运营方向 注意事项 避免认知偏差（如“月薪2万”改“月薪过万”）。 优先实用性，再考虑美观。 关注变现效率，而非单纯追求粉丝量。 第七章 变现：四大变现形式第一节 商业广告变现 交换物品 商家提供免费产品，博主创作宣传笔记。 注意：保持账号定位一致，避免流量下降。 替换广告文案 品牌方出价替换爆款笔记内容为广告。 注意：频繁修改可能被限流。 品牌合作 付费创作软性广告，兼顾博主定位与商家宣传。 官方渠道：通过蒲公英平台，收费透明。 非官方渠道：报价约1000元&#x2F;万粉。 第二节 带货变现 开薯店 在小红书开设店铺，直接带货。 商品合作 与品牌合作推广商品，赚取佣金。 第三节 私域引流变现 引流方式 通过笔记、直播涨粉，在私信或简介留微信号引流至私域。 注意：引流需谨慎，避免封号。 变现路径 用免费资源引流，低价课程打造口碑，高价课程或产品实现变现。 第四节 课程变现 知识付费直播 通过小红书官方知识付费直播板块，将技能转化为课程变现。 第八章 小红书团队管理第一节 招聘理念：小范围快速试错 试错策略 小团队（2人）试错，1人做内容，1人做运营，相互配合。 招聘0分（新人）或8分（高手）的聪明人。 第二节 招聘流程：三步搞定 笔试 分析喜欢的博主及爆款笔记。 现场创作笔记并自评。 分享运营案例及写作能力。 群面 讨论爆款笔记创作、数据分析、复盘方法。 单面 渴望：询问5年后目标，筛选有野心者。 底层逻辑：现场拆解爆款笔记，评估思考深度。 服从意愿：考察执行力和配合度。 第三节 拆解培训：三遍拆解法 三遍拆解法 第一遍：用户视角，提取要点，评估吸引力。 第二遍：从大类到细分打标签，理解算法机制。 第三遍：分析Top10评论，挖掘用户需求。 第四节 “赛马文化”：分裂与归一 内容赛马 比较不同形式或相似内容的笔记，优化爆款形式。 员工赛马 分裂：调动落后组，突出者带新队。 归一：优胜队整合落后队，减少内耗。 第五节 内部管理：头、中、尾分部管理 头部：放手管理，出现问题再干预。 中部：重点投入，提升头部比例。 尾部：否定错误思维，激励进步。 第六节 薪酬绩效：低底薪+高绩效 绩效评估 综合客观成果和复盘打分。 高绩效激励进步，低绩效促调整。","categories":[{"name":"笔记","slug":"笔记","permalink":"http://youkiiiiii.github.io/categories/%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"文案","slug":"文案","permalink":"http://youkiiiiii.github.io/tags/%E6%96%87%E6%A1%88/"},{"name":"小红书","slug":"小红书","permalink":"http://youkiiiiii.github.io/tags/%E5%B0%8F%E7%BA%A2%E4%B9%A6/"},{"name":"新媒体运营","slug":"新媒体运营","permalink":"http://youkiiiiii.github.io/tags/%E6%96%B0%E5%AA%92%E4%BD%93%E8%BF%90%E8%90%A5/"}]},{"title":"《避雷針》歌词试译","slug":"《避雷針》歌词试译","date":"2025-04-23T14:39:40.000Z","updated":"2025-04-23T17:27:49.882Z","comments":true,"path":"2025/04/23/《避雷針》歌词试译/","permalink":"http://youkiiiiii.github.io/2025/04/23/%E3%80%8A%E9%81%BF%E9%9B%B7%E9%87%9D%E3%80%8B%E6%AD%8C%E8%AF%8D%E8%AF%95%E8%AF%91/","excerpt":"作词：秋元康 遮断機 降りたままの開(あ)かずの踏切みたい 像是降下栏杆不再升起，被挡住的铁路道口 心を閉ざして僕をいつまで待_series させるんだ？ 封闭内心，到底要让我等多久 君っていつも何か言いかけて 結局 言葉飲み込むよ 你总是想说些什么，最终还是咽下话语","text":"作词：秋元康 遮断機 降りたままの開(あ)かずの踏切みたい 像是降下栏杆不再升起，被挡住的铁路道口 心を閉ざして僕をいつまで待_series させるんだ？ 封闭内心，到底要让我等多久 君っていつも何か言いかけて 結局 言葉飲み込むよ 你总是想说些什么，最终还是咽下话语 古着が好きなのは 知らない誰かになって 喜欢二手衣服，因为可以变成陌生人 本当の自分隠して 演じてみたいだけ 隐藏起真实的自己，只是想要扮作他人 今日の生き方も誰かのお古なのか 今天的生活方式，也是某人的旧东西吧 どうせまたフリマ行き 反正又要去向二手市场 どうでもいいけど… 已经不在意了吧... どうでもよくないし… 并没有不在意吧... どうにでもなればいい 无论怎样都好 毒にも薬にもならない日常は 不好不坏的日常 チクタクとただ繰り返す 滴答滴答地单调重复 無駄が僕たちの特権だって主張して… 主张浪费是我们的特权... 勿体無い生産性がないとか大人から見れば腹立たしい？ 虚度挥霍毫无效率什么的，在大人看来会很恼火吧？ 君は何を放棄したんだ？ 你放弃了什么？ そして何を諦めたんだ？ 又抛弃了什么？ でも強がって微笑む？ 可你是在强颜欢笑吗？ そんなに不幸に見えないのはなぜ？ 为什么看上去并没有那么不幸？ 君が気になってしまうよ 我不禁在意起你 AH- 面倒臭いその存在 啊，那样麻烦的存在 だって 因为 誰も理解できない 谁都无法理解 ネガティブ ネガティブ ネガティブ 消极 悲观 负面 暗い目をしている 眼神流露黯淡 そんな不器用さを守るには 为了守护那样的笨拙 僕がその盾になるしかない 我只好化身为盾 世の中の常識に傷つくのなら 如果被世俗伤害 君の代わりに僕が炎上してやるさ 我会为你承受怒火 いつだってそばで立っててやるよ 无论何时伫立在你身旁 悪意からの避雷針 成为替你转移恶意的避雷针 警報機 鳴りっぱなしで意思なんか通じない 警报器不停作响，心意无法传达 上下線 何回 通り過ぎれば開(あ)くんだろう？ 要经过多少班车，栏杆才会打开 ずっと前から知っていたはずさ 我早该知道 電車なんか来ないって… 电车根本不会到来... 一人が楽なのは話さなくていいから 独处时轻松，是因为不必说话 わかってもらおうなんて努力もいらないし… 不用试图获得他人理解... 何も関わらず 置身事外 存在知られたくない 无人所知 フェードアウトしたくなる 悄然隐去 それでもいいけど… 就算这样也好... それでも息をして… 即使仍在呼吸... それでも生きてるし… 尽管我还活着... いくつの扉を閉めたり鍵を掛けて 关上反锁多少扇门 引きこもってじっとして 封闭自我安静独处 ただ儚(はかな)すぎるこの若さ萎(しお)れるまで 直到转瞬即逝的青春凋零枯萎 使い切れず持て余す時間 那无处安放用不尽的时间 過保護な夢を殺すだけだ 只会扼杀被过度保护的梦想 僕は何に惹かれたの？ 我到底被什么吸引了？ 僕は何に期待するの？ 又在期待些什么？ 僕も不幸に見えると言うのか？ 你是说我看起来也很不幸吗？ 無関心は味方だ 漠不关心是伙伴 (君は感動のない眼差しで僕を見ていた) （你用毫无感情的眼神看着我） いつだって味方だ 无论何时都是你的同伴 (信じることは裏切られること （信任换来背叛 心を開くことは傷つくこと 敞开心扉受到伤害 落雷のような悲しみに打たれないように…) 愿不被这落雷般的悲伤击中...） 僕はどっち側にいるの？ 我到底该站在哪一边？ AH- 扱いにくいその価値観 啊，那难以处理的价值观 きっと目が離せない 我一定不会移开目光 ポジティブ ポジティブ ポジティブ 积极 乐观 肯定 君は君のままで… 你只要坚持自我就好... どんな理不尽だって許容できるさ 无论多么不公平我都会接受 気配を消して支える 默默支持着你 重箱の隅を突(つつ)かれたって 即使被百般挑剔 僕が相手になってやる 我也会上前应对 平凡な日々を今約束しよう 约定共同度过平凡的日子吧 ここにあるのは愛の避雷針 在这里的，是爱的避雷针","categories":[{"name":"翻译","slug":"翻译","permalink":"http://youkiiiiii.github.io/categories/%E7%BF%BB%E8%AF%91/"}],"tags":[{"name":"歌词","slug":"歌词","permalink":"http://youkiiiiii.github.io/tags/%E6%AD%8C%E8%AF%8D/"},{"name":"欅坂46","slug":"欅坂46","permalink":"http://youkiiiiii.github.io/tags/%E6%AC%85%E5%9D%8246/"}]},{"title":"Hexo APlayer 播放器样式美化","slug":"Hexo-音乐播放器-APlayer-样式美化","date":"2025-04-20T13:59:40.000Z","updated":"2025-05-09T20:46:46.472Z","comments":true,"path":"2025/04/20/Hexo-音乐播放器-APlayer-样式美化/","permalink":"http://youkiiiiii.github.io/2025/04/20/Hexo-%E9%9F%B3%E4%B9%90%E6%92%AD%E6%94%BE%E5%99%A8-APlayer-%E6%A0%B7%E5%BC%8F%E7%BE%8E%E5%8C%96/","excerpt":"由于Hexo的APlayer音乐播放器，默认样式和当前主题不太搭配，所以用Grok改了两个样式。使用方法是直接把代码粘贴到主题css文件底部，一般在博客根目录\\themes\\当前主题\\source\\css\\文件夹中。 我对编程一窍不通，并不能保证样式可以在其他主题中正常使用，或许还会有很多冗杂代码…下文内容可以随意修改，如果能优化成更漂亮的样式或者更灵活精简的代码就更好了！","text":"由于Hexo的APlayer音乐播放器，默认样式和当前主题不太搭配，所以用Grok改了两个样式。使用方法是直接把代码粘贴到主题css文件底部，一般在博客根目录\\themes\\当前主题\\source\\css\\文件夹中。 我对编程一窍不通，并不能保证样式可以在其他主题中正常使用，或许还会有很多冗杂代码…下文内容可以随意修改，如果能优化成更漂亮的样式或者更灵活精简的代码就更好了！ Win98 风格 复古y2k荧光 Win98 风格这是一款比较复古的样式，参考win98 music player (no fontawesome update) 收起歌曲列表 展开歌曲列表 代码如下 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217218219220221222223224225226227228229230231232233234235236237238239240241242243244245246247248249250251252253254255256257258259260261262263264265266267268269270271272273274275276277278279280281282283284285286287288289290291292293294295296297298299300301302303304305306307308309310311312313314315316317318319320321322323324325326327328329330331332333334335336337338339340341342343344345346347348349350351352353354355356357358359360361362363364365/* aplayer-custom.css *//* 引入像素化字体 */@font-face &#123; font-family: &quot;Pixelated MS Sans Serif&quot;; src: url(&quot;https://files.catbox.moe/1za99g.woff&quot;) format(&quot;woff&quot;), url(&quot;https://files.catbox.moe/8fwbkl.woff2&quot;) format(&quot;woff2&quot;); font-weight: normal; font-style: normal;&#125;@font-face &#123; font-family: &quot;Pixelated MS Sans Serif&quot;; src: url(&quot;https://files.catbox.moe/z7csle.woff&quot;) format(&quot;woff&quot;), url(&quot;https://files.catbox.moe/moqhx6.woff2&quot;) format(&quot;woff2&quot;); font-weight: bold; font-style: normal;&#125;/* APlayer Windows 98 Y2K Retro Style */.aplayer &#123; font-family: &quot;Pixelated MS Sans Serif&quot;, &quot;Nunito&quot;, monospace !important; -webkit-font-smoothing: none !important; font-size: 11px !important; box-shadow: inset -1px -1px #0a0a0a, inset 1px 1px #dfdfdf, inset -2px -2px #808080, inset 2px 2px #ffffff !important; /* Windows 98 风格立体边框 */ background: #c0c0c0 !important; /* 灰色背景 */ padding: 3px !important; width: 294px !important; /* 电脑端宽度保持不变 */ border-radius: 0 !important; margin: 20px auto !important; /* 调整上下外边距为 20px */ display: block !important; position: relative !important; overflow: hidden !important; color: #000000 !important; /* 默认文字颜色为黑色 */&#125;/* 固定模式 */.aplayer.aplayer-fixed &#123; position: fixed !important; bottom: 20px !important; /* 增加与底部的距离 */ left: 0 !important; right: 0 !important; margin: 0 auto !important; /* 水平居中 */ z-index: 99 !important; width: 294px !important; /* 保持宽度 */&#125;/* 标题栏 */.aplayer::before &#123; content: &quot;CD Player&quot; !important; display: block !important; background: linear-gradient(90deg, #FF6699, #FF8C94, #FFB6C1) !important; /* 网站粉色系渐变 */ padding: 2px 2px 2px 3px !important; /* 调整 padding 确保对齐 */ font-weight: bold !important; color: #ffffff !important; /* 白色标题文字 */ letter-spacing: 0 !important; font-size: 11px !important; line-height: 16px !important; /* 调整行高以匹配按钮高度 */ position: relative !important; z-index: 10 !important; /* 确保标题栏在按钮之上 */ width: 100% !important; /* 确保标题栏宽度与播放器一致 */ box-sizing: border-box !important; /* 包含 padding 在宽度计算中 */&#125;/* 信息区域 */.aplayer .aplayer-info &#123; margin-left: 88px !important; /* 调整为封面宽度，留出空间 */ padding: 5px 7px 5px 10px !important; height: 88px !important; /* 与封面高度一致 */ background: #c0c0c0 !important; /* 灰色背景 */ border-bottom: 1px solid #808080 !important; /* 灰色边框 */ box-shadow: inset 0 -1px #ffffff !important; /* 白色内阴影 */ display: block !important; position: relative !important; width: calc(100% - 88px) !important; /* 确保宽度与播放器对齐 */ box-sizing: border-box !important; /* 包含 padding 在宽度计算中 */&#125;/* 歌曲信息 */.aplayer .aplayer-info .aplayer-music &#123; margin: 0 0 5px 0 !important; padding-bottom: 0 !important; height: 20px !important; overflow: hidden !important; white-space: nowrap !important; text-overflow: ellipsis !important; color: #000000 !important; /* 黑色文字 */ line-height: 27px !important;&#125;.aplayer .aplayer-info .aplayer-music .aplayer-title &#123; font-size: 14px !important; color: #000000 !important; /* 黑色标题 */&#125;.aplayer .aplayer-info .aplayer-music .aplayer-author &#123; font-size: 12px !important; color: #666666 !important; /* 灰色作者 */&#125;/* 封面样式 */.aplayer .aplayer-pic &#123; box-shadow: inset -1px 0 #ffffff, /* 左侧白色内阴影 */ inset 1px 0 #808080, /* 右侧灰色内阴影 */ inset 0 1px #808080, /* 顶部灰色内阴影 */ inset 0 -1px #dfdfdf !important; /* 移除底部的白色内阴影 */ border: 2px solid #c0c0c0 !important; /* 统一边框颜色为灰色 */ border-bottom: 1px solid #808080 !important; /* 与右边底栏一致的灰色边框 */ box-shadow: inset 0 -1px #ffffff !important; /* 与右边底栏一致的白色内阴影 */ width: 88px !important; /* 调整高度，与信息区域一致 */ height: 88px !important; /* 调整高度，与信息区域一致 */ background-size: cover !important; background-position: center !important; position: relative !important; float: left !important; display: block !important; background-color: transparent !important; margin-left: 0px !important; /* 调整间距，增加与左边框的距离 */ margin-top: -3px !important; /* 向上延伸，与标题栏对齐 */&#125;/* 控制区域 */.aplayer .aplayer-controller &#123; display: flex !important; flex-direction: column !important; /* 垂直排列 */ align-items: stretch !important; position: relative !important; height: 65px !important; /* 保持高度 */ margin-top: 5px !important; width: 100% !important; /* 确保宽度与播放器对齐 */&#125;/* 进度条 */.aplayer .aplayer-bar-wrap &#123; margin: 0 0 5px 0 !important; padding: 10px 0 !important; flex: 0 0 auto !important; /* 固定高度 */&#125;.aplayer .aplayer-bar &#123; background: #000000 !important; /* 黑色背景 */ box-shadow: 1px 0 0 #ffffff, 1px 1px 0 #ffffff, 0 1px 0 #ffffff, -1px 0 0 #808080, -1px -1px 0 #808080, 0 -1px 0 #808080, -1px 1px 0 #ffffff, 1px -1px #808080 !important; /* 立体边框 */ height: 2px !important;&#125;.aplayer .aplayer-loaded &#123; background: #808080 !important; /* 灰色加载进度 */&#125;.aplayer .aplayer-played &#123; background: var(--border-color) !important; /* 使用网站粉色 #FF6699 */&#125;.aplayer .aplayer-thumb &#123; background-image: url(&quot;https://raw.githubusercontent.com/jdan/98.css/main/icon/indicator-horizontal.svg&quot;) !important; width: 11px !important; height: 21px !important; margin-top: -10px !important; transform: scale(1) !important;&#125;/* 时间显示 */.aplayer .aplayer-time &#123; color: #222222 !important; font-family: &quot;Pixelated MS Sans Serif&quot;, &quot;Nunito&quot;, monospace !important; font-size: 11px !important; padding-left: 7px !important; bottom: 6px !important; /* 调整位置，向上移动 */ height: 16px !important; /* 与标题栏高度一致 */ line-height: 16px !important; /* 与标题栏对齐 */&#125;/* 控制按钮容器 */.aplayer .aplayer-controller .aplayer-time + div &#123; display: none !important; /* 隐藏原始控制按钮区域 */&#125;/* 移动控制按钮到标题栏 */.aplayer .aplayer-icon-back, /* 上一首 */.aplayer .aplayer-icon-play, /* 播放/暂停 */.aplayer .aplayer-icon-forward, /* 下一首 */.aplayer .aplayer-icon-loop, /* 循环模式 */.aplayer .aplayer-icon-menu /* 歌单展开/收起 */ &#123; display: inline-block !important; /* 确保按钮显示 */ position: absolute !important; top: 0px !important; /* 向下调整，与时间对齐 */ width: 16px !important; height: 16px !important; /* 调整高度与标题栏一致 */ background: transparent !important; /* 移除背景 */ box-shadow: none !important; /* 移除立体效果 */ cursor: pointer !important; z-index: 20 !important; /* 确保按钮在标题栏之上 */&#125;/* 调整每个按钮的位置 */.aplayer .aplayer-icon-back &#123; right: 82px !important; /* 上一首 */&#125;.aplayer .aplayer-icon-play &#123; right: 64px !important; /* 播放/暂停 */&#125;.aplayer .aplayer-icon-forward &#123; right: 46px !important; /* 下一首 */&#125;.aplayer .aplayer-icon-loop &#123; right: 28px !important; /* 循环模式 */&#125;.aplayer .aplayer-icon-menu &#123; right: 10px !important; /* 歌单展开/收起 */&#125;/* 控制按钮样式 */.aplayer .aplayer-icon path &#123; fill: #333333 !important; /* 深灰色图标 */&#125;.aplayer .aplayer-icon:hover path &#123; fill: var(--border-color) !important; /* 悬停时图标变为粉色 #FF6699 */&#125;/* 播放列表 */.aplayer.aplayer-withlist .aplayer-info &#123; border-bottom: 1px solid #808080 !important; box-shadow: inset 0 -1px #ffffff !important;&#125;.aplayer .aplayer-list &#123; background: #ffffff !important; box-shadow: inset -1px -1px #ffffff, inset 1px 1px #808080, inset -2px -2px #dfdfdf, inset 2px 2px #0a0a0a !important; /* 调整立体边框 */ border-top: 2px solid #c0c0c0 !important; /* 灰色边框 */ margin: 0 !important; width: 100% !important; /* 确保宽度与播放器对齐 */ display: block !important;&#125;/* 播放列表内容 */.aplayer .aplayer-list ol &#123; padding: 0 !important; margin: 0 !important; list-style-type: none !important; /* 移除默认序号 */ list-style: none !important; /* 确保无默认样式 */&#125;/* 播放列表项 */.aplayer .aplayer-list ol li &#123; border-top: 1px dotted #000000 !important; /* 黑色虚线分隔 */ padding: 4px 8px 4px 12px !important; /* 增加左内边距，避免背景覆盖左边框 */ margin-left: 2px !important; /* 向右偏移，避免背景覆盖左边框 */ font-size: 11px !important; color: #000000 !important; height: 32px !important; line-height: 32px !important; position: relative !important; list-style-type: none !important; /* 移除默认序号 */ list-style: none !important; /* 确保无默认样式 */ counter-reset: none !important; /* 移除可能的计数器 */&#125;/* 移除 Markdown 样式添加的 ::before 伪元素 */.aplayer .aplayer-list ol li::before &#123; content: none !important; /* 移除 Markdown 样式添加的序号 */ display: none !important;&#125;/* 紫色条样式 */.aplayer .aplayer-list ol li .aplayer-list-cur &#123; background-color: #ad7a86 !important; /* 紫色条颜色 */ width: 3px !important; /* 宽度保持不变 */ height: 16px !important; /* 加长紫色条，从 11px 增加到 16px */ position: absolute !important; left: 2px !important; /* 与左边框对齐，但不覆盖边框 */ top: 50% !important; /* 垂直居中 */ transform: translateY(-50%) !important; /* 调整垂直居中 */&#125;/* 歌曲序号 */.aplayer .aplayer-list ol li .aplayer-list-index &#123; color: #666666 !important; margin-right: 12px !important; cursor: pointer !important; line-height: 32px !important; /* 与 li 高度一致，确保垂直居中 */&#125;/* 歌曲作者 */.aplayer .aplayer-list ol li .aplayer-list-author &#123; color: #666666 !important; float: right !important; cursor: pointer !important;&#125;/* 悬停和选中状态 */.aplayer .aplayer-list ol li:hover &#123; background: #dfdfdf !important; /* 深灰色背景 */ color: #000000 !important;&#125;.aplayer .aplayer-list ol li.aplayer-list-light &#123; background: #e9e9e9 !important; /* 选中时的深灰色背景 */ color: #000000 !important;&#125;/* 滚动条 */.aplayer .aplayer-list ol::-webkit-scrollbar &#123; width: 5px !important;&#125;.aplayer .aplayer-list ol::-webkit-scrollbar-thumb &#123; border-radius: 0 !important; background-color: #c0c0c0 !important; box-shadow: inset -1px -1px #0a0a0a, inset 1px 1px #ffffff !important;&#125;.aplayer .aplayer-list ol::-webkit-scrollbar-thumb:hover &#123; background-color: #dfdfdf !important;&#125;/* 移除不必要的元素 */.aplayer .aplayer-pic .aplayer-button &#123; display: none !important; /* 移除封面上的播放/暂停按钮 */&#125;.aplayer .aplayer-volume-wrap &#123; display: none !important; /* 移除音量控制 */&#125;.aplayer .aplayer-icon-order &#123; display: none !important; /* 移除顺序播放图标 */&#125;.aplayer .aplayer-lrc &#123; display: none !important; /* 移除歌词 */&#125;/* 移动端适配 */@media only screen and (max-width: 880px) &#123; .aplayer &#123; width: 280px !important; /* 移动端宽度调整为 280px，比电脑端 294px 略小 */ margin: 20px auto !important; /* 同步调整移动端上下外边距 */ &#125;&#125;@media only screen and (orientation: portrait) &#123; .aplayer &#123; width: 280px !important; /* 移动端宽度调整为 280px，比电脑端 294px 略小 */ margin: 20px auto !important; /* 同步调整纵向屏幕上下外边距 */ &#125;&#125; 复古y2k荧光这个样式应该比较适合黑色调的主题。 单曲模式： 歌单模式： 代码如下aplayer-custom.css *//* 加载字体 - 使用 Noto Sans 系列，支持多语言（简体中文、日文、韩文、拉丁字母） */@font-face &#123; font-family: &#x27;Noto Sans SC&#x27;; src: url(&#x27;https://cdn.jsdelivr.net/npm/@fontsource/noto-sans-sc@5.0.17/files/noto-sans-sc-chinese-simplified-700-normal.woff2&#x27;) format(&#x27;woff2&#x27;), url(&#x27;https://cdn.jsdelivr.net/npm/@fontsource/noto-sans-sc@5.0.17/files/noto-sans-sc-chinese-simplified-700-normal.woff&#x27;) format(&#x27;woff&#x27;); font-weight: 700; /* Bold */ font-style: normal; font-display: swap;&#125;@font-face &#123; font-family: &#x27;Noto Sans JP&#x27;; src: url(&#x27;https://cdn.jsdelivr.net/npm/@fontsource/noto-sans-jp@5.0.17/files/noto-sans-jp-japanese-700-normal.woff2&#x27;) format(&#x27;woff2&#x27;), url(&#x27;https://cdn.jsdelivr.net/npm/@fontsource/noto-sans-jp@5.0.17/files/noto-sans-jp-japanese-700-normal.woff&#x27;) format(&#x27;woff&#x27;); font-weight: 700; font-style: normal; font-display: swap;&#125;@font-face &#123; font-family: &#x27;Noto Sans KR&#x27;; src: url(&#x27;https://cdn.jsdelivr.net/npm/@fontsource/noto-sans-kr@5.0.17/files/noto-sans-kr-korean-700-normal.woff2&#x27;) format(&#x27;woff2&#x27;), url(&#x27;https://cdn.jsdelivr.net/npm/@fontsource/noto-sans-kr@5.0.17/files/noto-sans-kr-korean-700-normal.woff&#x27;) format(&#x27;woff&#x27;); font-weight: 700; font-style: normal; font-display: swap;&#125;@font-face &#123; font-family: &#x27;Noto Sans&#x27;; src: url(&#x27;https://cdn.jsdelivr.net/npm/@fontsource/noto-sans@5.0.17/files/noto-sans-latin-700-normal.woff2&#x27;) format(&#x27;woff2&#x27;), url(&#x27;https://cdn.jsdelivr.net/npm/@fontsource/noto-sans@5.0.17/files/noto-sans-latin-700-normal.woff&#x27;) format(&#x27;woff&#x27;); font-weight: 700; font-style: normal; font-display: swap;&#125;/* 定义全局变量，方便后续维护 */:root &#123; --primary-pink: #FF6699; /* 主色调：粉色 */ --secondary-purple: #D8BFD8; /* 辅助色调：紫色 */ --light-pink: #FFB6C1; /* 浅粉色 */ --glow-pink: rgba(255, 102, 153, 0.7); /* 粉色光晕 */ --glow-purple: rgba(216, 191, 216, 0.3); /* 紫色光晕 */ --glow-blue: rgba(176, 224, 230, 0.3); /* 浅蓝色光晕 */ --inner-glow: rgba(255, 235, 245, 0.3); /* 极浅粉色内发光 */ --border-radius: 20px; /* 默认圆角 */ --border-radius-mobile: 25px; /* 移动端圆角 */ --player-height: 90px; /* 播放器高度 */ --list-max-height: 310px; /* 歌曲列表最大高度 */ --list-max-height-mobile: 210px; /* 移动端歌曲列表最大高度 */&#125;/* APlayer Y2K Retro Japanese Cute Style */.aplayer &#123; background: linear-gradient(135deg, rgba(255, 102, 153, 0.2), rgba(216, 191, 216, 0.2)) !important; font-family: &#x27;Noto Sans SC&#x27;, &#x27;Noto Sans JP&#x27;, &#x27;Noto Sans KR&#x27;, &#x27;Noto Sans&#x27;, sans-serif !important; font-weight: 700 !important; margin: 20px auto !important; border: none !important; border-radius: var(--border-radius) !important; -webkit-user-select: none !important; -moz-user-select: none !important; -ms-user-select: none !important; user-select: none !important; line-height: normal !important; position: relative !important; color: #ffffff !important; width: 100% !important; max-width: 650px !important; height: auto !important; min-height: var(--player-height) !important; transition: all 0.3s ease !important; box-shadow: 0 0 15px var(--glow-pink), 0 0 20px var(--glow-purple), 0 0 25px var(--glow-blue) !important; overflow: hidden !important; scrollbar-width: none !important; -ms-overflow-style: none !important;&#125;.aplayer::-webkit-scrollbar &#123; display: none !important; width: 0 !important; height: 0 !important;&#125;/* 播放器部分（封面和控制区域） */.aplayer .aplayer-body &#123; border-top: 3px double var(--primary-pink) !important; border-bottom: 3px double var(--primary-pink) !important; border-left: none !important; border-right: none !important; border-radius: var(--border-radius) !important; box-shadow: 0 0 15px var(--glow-pink), 0 0 20px var(--glow-purple), 0 0 25px var(--glow-blue), inset 0 0 8px var(--inner-glow) !important; background: rgba(0, 0, 0, 0.8) !important; height: var(--player-height) !important; overflow: hidden !important; position: relative !important;&#125;/* 歌曲列表部分（展开时显示） */.aplayer.aplayer-withlist .aplayer-list &#123; display: block !important; background: rgba(0, 0, 0, 0.8) !important; border-top: none !important; border-bottom: 3px double var(--primary-pink) !important; border-left: none !important; border-right: none !important; border-radius: 0 0 var(--border-radius) var(--border-radius) !important; box-shadow: 0 0 15px var(--glow-pink), 0 0 20px var(--glow-purple), 0 0 25px var(--glow-blue), inset 0 0 8px var(--inner-glow) !important; height: auto !important; max-height: var(--list-max-height) !important; overflow-y: hidden !important; position: relative !important; top: 0 !important; scrollbar-width: none !important; -ms-overflow-style: none !important; opacity: 1 !important; transform: scaleY(1) !important; transform-origin: top !important; transition: max-height 0.5s ease-in-out, opacity 0.5s ease-in-out, transform 0.5s ease-in-out !important;&#125;/* 歌曲列表收起时的样式 */.aplayer.aplayer-withlist.aplayer-list-hide .aplayer-list &#123; max-height: 0 !important; opacity: 0 !important; transform: scaleY(0.95) !important; transform-origin: top !important; transition: max-height 0.5s ease-in-out, opacity 0.5s ease-in-out, transform 0.5s ease-in-out !important; border: none !important; box-shadow: none !important; overflow: hidden !important;&#125;/* 收起歌曲列表时，播放器部分调整 */.aplayer.aplayer-withlist.aplayer-list-hide .aplayer-body &#123; border-top: 3px double var(--primary-pink) !important; border-bottom: 3px double var(--primary-pink) !important; border-left: none !important; border-right: none !important; border-radius: var(--border-radius) !important; box-shadow: none !important; background: rgba(0, 0, 0, 0.8) !important; height: var(--player-height) !important;&#125;/* 收起歌曲列表时，整体高度调整 */.aplayer.aplayer-withlist.aplayer-list-hide &#123; border: none !important; box-shadow: none !important; min-height: var(--player-height) !important; height: var(--player-height) !important;&#125;/* 针对 .aplayer-list 的滚动条，强制隐藏 */.aplayer .aplayer-list::-webkit-scrollbar,.aplayer-wrap .aplayer .aplayer-list::-webkit-scrollbar,.aplayer-container .aplayer .aplayer-list::-webkit-scrollbar &#123; display: none !important; width: 0 !important; height: 0 !important;&#125;/* 针对播放器列表的 ol 元素，设置滚动条样式 */.aplayer .aplayer-list ol &#123; list-style-type: none !important; margin: 0 !important; padding: 0 !important; overflow-y: auto !important; height: auto !important; min-height: 100% !important; box-sizing: border-box !important; scrollbar-width: thin !important; scrollbar-color: var(--primary-pink) transparent !important;&#125;/* Webkit 浏览器滚动条样式 - 针对 ol */.aplayer .aplayer-list ol::-webkit-scrollbar &#123; width: 5px !important; height: 5px !important; display: block !important;&#125;.aplayer .aplayer-list ol::-webkit-scrollbar-track &#123; background: transparent !important; border-radius: 3px !important;&#125;.aplayer .aplayer-list ol::-webkit-scrollbar-thumb &#123; border-radius: 3px !important; background: linear-gradient(90deg, var(--primary-pink), var(--secondary-purple)) !important;&#125;.aplayer .aplayer-list ol::-webkit-scrollbar-thumb:hover &#123; background: linear-gradient(90deg, var(--secondary-purple), var(--primary-pink)) !important;&#125;/* 列表项样式 */.aplayer .aplayer-list ol li &#123; list-style-type: none !important; position: relative !important; height: 32px !important; line-height: 32px !important; padding: 0 15px !important; font-size: 12px !important; border-top: 1px dashed var(--secondary-purple) !important; cursor: pointer !important; transition: all 0.2s ease !important; overflow: hidden !important; color: #ffffff !important; font-family: &#x27;Noto Sans SC&#x27;, &#x27;Noto Sans JP&#x27;, &#x27;Noto Sans KR&#x27;, &#x27;Noto Sans&#x27;, sans-serif !important; font-weight: 700 !important; text-shadow: 0 0 5px var(--glow-pink) !important;&#125;.aplayer .aplayer-list ol li::before &#123; content: none !important; display: none !important;&#125;.aplayer .aplayer-list ol li:first-child &#123; border-top: none !important;&#125;.aplayer .aplayer-list ol li:hover &#123; background: rgba(216, 191, 216, 0.3) !important;&#125;.aplayer .aplayer-list ol li.aplayer-list-light &#123; background: rgba(255, 102, 153, 0.5) !important;&#125;.aplayer .aplayer-list ol li.aplayer-list-light .aplayer-list-cur &#123; display: inline-block !important;&#125;.aplayer .aplayer-list ol li .aplayer-list-cur &#123; display: none !important; width: 3px !important; height: 22px !important; position: absolute !important; left: 0 !important; top: 5px !important; cursor: pointer !important; background: var(--primary-pink) !important;&#125;.aplayer .aplayer-list ol li .aplayer-list-index &#123; color: var(--light-pink) !important; margin-right: 12px !important; cursor: pointer !important; display: inline-block !important; font-family: &#x27;Noto Sans SC&#x27;, &#x27;Noto Sans JP&#x27;, &#x27;Noto Sans KR&#x27;, &#x27;Noto Sans&#x27;, sans-serif !important; font-weight: 700 !important; text-shadow: 0 0 3px var(--glow-purple) !important;&#125;.aplayer .aplayer-list ol li .aplayer-list-author &#123; color: var(--secondary-purple) !important; float: right !important; cursor: pointer !important;&#125;/* 歌曲标题和作者 */.aplayer .aplayer-info .aplayer-music &#123; overflow: hidden !important; white-space: nowrap !important; text-overflow: ellipsis !important; margin: 0 0 13px 5px !important; -webkit-user-select: text !important; -moz-user-select: text !important; -ms-user-select: text !important; user-select: text !important; cursor: default !important; padding-bottom: 2px !important; height: 20px !important; font-family: &#x27;Noto Sans SC&#x27;, &#x27;Noto Sans JP&#x27;, &#x27;Noto Sans KR&#x27;, &#x27;Noto Sans&#x27;, sans-serif !important; font-weight: 700 !important;&#125;.aplayer .aplayer-info .aplayer-music .aplayer-title &#123; font-size: 16px !important; color: #ffffff !important; text-shadow: 0 0 5px var(--glow-pink), 1px 1px 0 var(--secondary-purple) !important;&#125;.aplayer .aplayer-info .aplayer-music .aplayer-author &#123; font-size: 14px !important; color: var(--light-pink) !important; text-shadow: 0 0 3px var(--glow-purple) !important;&#125;/* 播放器图标样式 */.aplayer svg &#123; width: 100% !important; height: 100% !important;&#125;.aplayer svg circle,.aplayer svg path &#123; fill: var(--light-pink) !important; transition: fill 0.3s ease !important;&#125;.aplayer svg path:hover &#123; fill: #FF8C94 !important;&#125;.aplayer .aplayer-icon &#123; width: 15px !important; height: 15px !important; border: none !important; background-color: transparent !important; outline: none !important; cursor: pointer !important; opacity: 0.8 !important; vertical-align: middle !important; padding: 0 !important; font-size: 12px !important; margin: 0 !important; display: inline-block !important;&#125;.aplayer .aplayer-icon path &#123; transition: all 0.2s ease-in-out !important; fill: var(--light-pink) !important;&#125;.aplayer .aplayer-icon:hover path &#123; fill: #FF8C94 !important;&#125;.aplayer .aplayer-icon-back,.aplayer .aplayer-icon-forward,.aplayer .aplayer-icon-lrc,.aplayer .aplayer-icon-order,.aplayer .aplayer-icon-play &#123; display: none !important;&#125;.aplayer .aplayer-icon-lrc-inactivity svg &#123; opacity: 0.4 !important;&#125;.aplayer .aplayer-icon-forward &#123; transform: rotate(180deg) !important;&#125;/* 播放器封面 */.aplayer.aplayer-withlrc .aplayer-pic &#123; height: var(--player-height) !important; width: var(--player-height) !important; border-radius: 10px !important; border: 3px double #ffebf5 !important; box-shadow: 0 0 10px var(--glow-pink), 0 0 15px var(--glow-purple) !important;&#125;.aplayer .aplayer-pic &#123; position: relative !important; float: left !important; height: 66px !important; width: 66px !important; background-size: cover !important; background-position: 50% !important; transition: all 0.3s ease !important; cursor: pointer !important; border-right: 1px dashed var(--secondary-purple) !important; border-radius: 10px !important; box-shadow: 0 0 8px var(--glow-pink) !important;&#125;.aplayer .aplayer-pic:hover .aplayer-button &#123; opacity: 1 !important;&#125;.aplayer .aplayer-pic .aplayer-button &#123; position: absolute !important; border-radius: 50% !important; opacity: 0.8 !important; text-shadow: 0 1px 1px rgba(0, 0, 0, 0.2) !important; background: linear-gradient(135deg, var(--primary-pink), var(--secondary-purple)) !important; transition: all 0.1s ease !important; box-shadow: 0 0 8px var(--glow-pink) !important;&#125;.aplayer .aplayer-pic .aplayer-button path &#123; fill: #ffffff !important;&#125;.aplayer .aplayer-pic .aplayer-hide &#123; display: none !important;&#125;.aplayer .aplayer-pic .aplayer-play &#123; width: 26px !important; height: 26px !important; border: 3px double #ffebf5 !important; bottom: 50% !important; right: 50% !important; margin: 0 -15px -15px 0 !important;&#125;.aplayer .aplayer-pic .aplayer-pause &#123; width: 16px !important; height: 16px !important; border: 3px double #ffebf5 !important; bottom: 4px !important; right: 4px !important;&#125;.aplayer .aplayer-pic .aplayer-pause svg &#123; position: absolute !important; top: 2px !important; left: 2px !important; height: 12px !important; width: 12px !important;&#125;/* 播放器信息区域 */.aplayer.aplayer-withlrc .aplayer-info &#123; margin-left: var(--player-height) !important; height: var(--player-height) !important; padding: 10px 7px 0 !important;&#125;.aplayer .aplayer-info &#123; margin-left: 66px !important; padding: 14px 7px 0 10px !important; height: 66px !important; box-sizing: border-box !important;&#125;.aplayer.aplayer-withlist .aplayer-info &#123; border-bottom: 1px dashed var(--secondary-purple) !important;&#125;.aplayer .aplayer-info .aplayer-controller &#123; position: relative !important; display: flex !important;&#125;.aplayer .aplayer-info .aplayer-controller .aplayer-bar-wrap &#123; margin: 0 0 0 5px !important; padding: 4px 0 !important; cursor: pointer !important; flex: 1 !important;&#125;.aplayer .aplayer-info .aplayer-controller .aplayer-bar-wrap:hover .aplayer-bar .aplayer-played .aplayer-thumb &#123; transform: scale(1) !important;&#125;.aplayer .aplayer-info .aplayer-controller .aplayer-bar-wrap .aplayer-bar &#123; position: relative !important; height: 4px !important; width: 100% !important; background: rgba(216, 191, 216, 0.3) !important; border-radius: 2px !important;&#125;.aplayer .aplayer-info .aplayer-controller .aplayer-bar-wrap .aplayer-bar .aplayer-loaded &#123; position: absolute !important; left: 0 !important; top: 0 !important; bottom: 0 !important; background: rgba(216, 191, 216, 0.6) !important; height: 4px !important; transition: all 0.5s ease !important;&#125;.aplayer .aplayer-info .aplayer-controller .aplayer-bar-wrap .aplayer-bar .aplayer-played &#123; position: absolute !important; left: 0 !important; top: 0 !important; bottom: 0 !important; height: 4px !important; background: linear-gradient(90deg, var(--primary-pink), var(--secondary-purple)) !important; border-radius: 2px !important;&#125;.aplayer .aplayer-info .aplayer time &#123; position: absolute !important; top: 0 !important; right: 5px !important; margin-top: -6px !important; margin-right: -10px !important; height: 12px !important; width: 12px !important; border-radius: 50% !important; cursor: pointer !important; transition: all 0.3s ease-in-out !important; transform: scale(0) !important; background: var(--light-pink) !important; border: 3px double var(--secondary-purple) !important; box-shadow: 0 0 8px var(--glow-pink) !important;&#125;.aplayer .aplayer-info .aplayer-controller .aplayer-time &#123; position: relative !important; right: 0 !important; bottom: 4px !important; height: 17px !important; color: var(--light-pink) !important; font-size: 11px !important; padding-left: 7px !important;&#125;.aplayer .aplayer-info .aplayer-controller .aplayer-time .aplayer-time-inner &#123; vertical-align: middle !important;&#125;.aplayer .aplayer-info .aplayer-controller .aplayer-time .aplayer-icon &#123; cursor: pointer !important; transition: all 0.2s ease !important;&#125;.aplayer .aplayer-info .aplayer-controller .aplayer-time .aplayer-icon path &#123; fill: var(--light-pink) !important;&#125;.aplayer .aplayer-info .aplayer-controller .aplayer-time .aplayer-icon.aplayer-icon-loop &#123; margin-right: 2px !important;&#125;.aplayer .aplayer-info .aplayer-controller .aplayer-time .aplayer-icon:hover path &#123; fill: #FF8C94 !important;&#125;.aplayer .aplayer-info .aplayer-controller .aplayer-time .aplayer-icon.aplayer-icon-menu,.aplayer .aplayer-info .aplayer-controller .aplayer-time.aplayer-time-narrow .aplayer-icon-menu,.aplayer .aplayer-info .aplayer-controller .aplayer-time.aplayer-time-narrow .aplayer-icon-mode &#123; display: none !important;&#125;.aplayer.aplayer-withlist .aplayer-icon-order,.aplayer.aplayer-withlist .aplayer-info .aplayer-controller .aplayer-time .aplayer-icon.aplayer-icon-menu &#123; display: inline !important;&#125;/* 音量控制 */.aplayer .aplayer-info .aplayer-controller .aplayer-volume-wrap &#123; position: relative !important; display: inline-block !important; margin-left: 3px !important; cursor: pointer !important;&#125;.aplayer .aplayer-info .aplayer-controller .aplayer-volume-wrap:hover .aplayer-volume-bar-wrap &#123; height: 40px !important;&#125;.aplayer .aplayer-info .aplayer-controller .aplayer-volume-wrap .aplayer-volume-bar-wrap &#123; position: absolute !important; bottom: 15px !important; right: -3px !important; width: 25px !important; height: 0 !important; z-index: 99 !important; overflow: hidden !important; transition: all 0.2s ease-in-out !important;&#125;.aplayer .aplayer-info .aplayer-controller .aplayer-volume-wrap .aplayer-volume-bar-wrap.aplayer-volume-bar-wrap-active &#123; height: 40px !important;&#125;.aplayer .aplayer-info .aplayer-controller .aplayer-volume-wrap .aplayer-volume-bar-wrap .aplayer-volume-bar &#123; position: absolute !important; bottom: 0 !important; right: 10px !important; width: 5px !important; height: 35px !important; background: rgba(216, 191, 216, 0.3) !important; border-radius: 2.5px !important; overflow: hidden !important;&#125;.aplayer .aplayer-info .aplayer-controller .aplayer-volume-wrap .aplayer-volume-bar-wrap .aplayer-volume &#123; position: absolute !important; bottom: 0 !important; right: 0 !important; width: 5px !important; background: linear-gradient(0deg, var(--primary-pink), var(--secondary-purple)) !important; transition: all 0.1s ease !important; border-radius: 2.5px !important;&#125;/* 加载动画 */.aplayer.aplayer-loading .aplayer-info .aplayer-controller .aplayer-loading-icon &#123; display: block !important;&#125;.aplayer.aplayer-loading .aplayer-info .aplayer-controller .aplayer-bar-wrap .aplayer-bar .aplayer-played .aplayer-thumb &#123; transform: scale(1) !important;&#125;.aplayer .aplayer-info .aplayer-controller .aplayer-loading-icon &#123; display: none !important;&#125;.aplayer .aplayer-info .aplayer-controller .aplayer-loading-icon svg &#123; position: absolute !important; animation: rotate 1s linear infinite !important;&#125;/* 歌词样式 */.aplayer.aplayer-withlrc .aplayer-lrc &#123; display: block !important; border: none !important; background: transparent !important;&#125;.aplayer .aplayer-lrc &#123; display: none !important; position: relative !important; height: 30px !important; text-align: center !important; overflow: hidden !important; margin: -10px 0 7px !important; background: transparent !important;&#125;.aplayer .aplayer-lrc:before,.aplayer .aplayer-lrc:after &#123; display: none !important;&#125;.aplayer .aplayer-lrc p &#123; font-size: 12px !important; color: #ffffff !important; line-height: 16px !important; height: 16px !important; padding: 0 !important; margin: 0 !important; transition: all 0.5s ease-out !important; opacity: 0.6 !important; overflow: hidden !important; text-shadow: 0 0 8px var(--glow-pink) !important;&#125;.aplayer .aplayer-lrc p.aplayer-lrc-current &#123; opacity: 1 !important; overflow: visible !important; height: auto !important; min-height: 16px !important; color: var(--primary-pink) !important; font-size: 14px !important; text-shadow: 0 0 10px var(--glow-pink), 1px 1px 0 var(--secondary-purple) !important;&#125;.aplayer .aplayer-lrc.aplayer-lrc-hide &#123; display: none !important;&#125;.aplayer .aplayer-lrc .aplayer-lrc-contents &#123; width: 100% !important; transition: all 0.5s ease-out !important; user-select: text !important; cursor: default !important;&#125;.aplayer .aplayer-lrc-content &#123; display: none !important;&#125;/* 通知样式 */.aplayer .aplayer-notice &#123; opacity: 0 !important; position: absolute !important; top: 50% !important; left: 50% !important; transform: translate(-50%, -50%) !important; font-size: 12px !important; border-radius: 10px !important; padding: 5px 10px !important; transition: all 0.3s ease-in-out !important; overflow: hidden !important; color: #ffffff !important; background: linear-gradient(135deg, var(--primary-pink), var(--secondary-purple)) !important; box-shadow: 0 0 8px var(--glow-pink) !important;&#125;/* 迷你模式 */.aplayer.aplayer-narrow &#123; width: 66px !important;&#125;.aplayer.aplayer-narrow .aplayer-info,.aplayer.aplayer-narrow .aplayer-list &#123; display: none !important;&#125;.aplayer.aplayer-narrow .aplayer-body,.aplayer.aplayer-narrow .aplayer-pic &#123; height: 66px !important; width: 66px !important;&#125;/* 固定模式 */.aplayer.aplayer-fixed &#123; position: fixed !important; bottom: 20px !important; left: 0 !important; right: 0 !important; margin: 0 auto !important; z-index: 99 !important; overflow: visible !important; max-width: 650px !important; box-shadow: none !important;&#125;.aplayer.aplayer-fixed .aplayer-list &#123; margin-bottom: 65px !important; border-top: none !important; border-bottom: none !important; border-left: none !important; border-right: none !important; max-height: calc(100vh - 85px) !important; position: fixed !important; bottom: 85px !important; left: 0 !important; right: 0 !important; top: auto !important; opacity: 1 !important; transform: scaleY(1) !important; transform-origin: bottom !important; transition: max-height 0.5s ease-in-out, opacity 0.5s ease-in-out, transform 0.5s ease-in-out !important;&#125;.aplayer.aplayer-fixed.aplayer-list-hide .aplayer-list &#123; max-height: 0 !important; opacity: 0 !important; transform: scaleY(0.95) !important; transform-origin: bottom !important; transition: max-height 0.5s ease-in-out, opacity 0.5s ease-in-out, transform 0.5s ease-in-out !important; border: none !important; box-shadow: none !important; overflow: hidden !important;&#125;.aplayer.aplayer-fixed .aplayer-body &#123; position: fixed !important; bottom: 20px !important; left: 0 !important; right: 0 !important; margin: 0 auto !important; z-index: 99 !important; background: rgba(0, 0, 0, 0.8) !important; padding-right: 18px !important; transition: all 0.3s ease !important; max-width: 650px !important; border-top: 3px double var(--primary-pink) !important; border-bottom: 3px double var(--primary-pink) !important; border-left: none !important; border-right: none !important; border-radius: var(--border-radius) var(--border-radius) 0 0 !important;&#125;.aplayer.aplayer-fixed .aplayer-lrc &#123; display: block !important; position: fixed !important; bottom: 90px !important; /* 调整歌词位置，70px + 20px 间距 */ left: 0 !important; right: 0 !important; margin: 0 !important; z-index: 98 !important; pointer-events: none !important; text-shadow: 0 0 8px var(--glow-pink), 1px 1px 0 var(--secondary-purple) !important; background: transparent !important;&#125;.aplayer.aplayer-fixed .aplayer-lrc:after,.aplayer.aplayer-fixed .aplayer-lrc:before &#123; display: none !important;&#125;.aplayer.aplayer-fixed .aplayer-info &#123; transform: scaleX(1) !important; transform-origin: 0 0 !important; transition: all 0.3s ease !important; border-bottom: none !important; border-top: 1px dashed var(--secondary-purple) !important;&#125;.aplayer.aplayer-fixed .aplayer-info .aplayer-music &#123; width: calc(100% - 105px) !important;&#125;.aplayer.aplayer-fixed .aplayer-miniswitcher &#123; display: block !important;&#125;.aplayer.aplayer-fixed.aplayer-narrow .aplayer-info &#123; display: block !important; transform: scaleX(0) !important;&#125;.aplayer.aplayer-fixed.aplayer-narrow .aplayer-body &#123; width: 66px !important;&#125;.aplayer.aplayer-fixed.aplayer-narrow .aplayer-miniswitcher .aplayer-icon &#123; transform: rotateY(0) !important;&#125;.aplayer.aplayer-fixed .aplayer-icon-back,.aplayer.aplayer-fixed .aplayer-icon-forward,.aplayer.aplayer-fixed .aplayer-icon-lrc,.aplayer.aplayer-fixed .aplayer-icon-play &#123; display: inline-block !important;&#125;.aplayer.aplayer-fixed .aplayer-icon-back,.aplayer.aplayer-fixed .aplayer-icon-forward,.aplayer.aplayer-fixed .aplayer-icon-menu,.aplayer.aplayer-fixed .aplayer-icon-play &#123; position: absolute !important; bottom: 27px !important; width: 20px !important; height: 20px !important;&#125;.aplayer.aplayer-fixed .aplayer-icon-back &#123; right: 75px !important;&#125;.aplayer.aplayer-fixed .aplayer-icon-play &#123; right: 50px !important;&#125;.aplayer.aplayer-fixed .aplayer-icon-forward &#123; right: 25px !important;&#125;.aplayer.aplayer-fixed .aplayer-icon-menu &#123; right: 0 !important;&#125;.aplayer.aplayer-arrow .aplayer-icon-loop,.aplayer.aplayer-arrow .aplayer-icon-order,.aplayer.aplayer-mobile .aplayer-icon-volume-down &#123; display: none !important;&#125;/* 迷你切换器 */.aplayer .aplayer-miniswitcher &#123; display: none !important; position: absolute !important; top: 0 !important; right: 0 !important; bottom: 0 !important; height: 100% !important; background: linear-gradient(135deg, var(--primary-pink), var(--secondary-purple)) !important; width: 18px !important; border-radius: 0 var(--border-radius) var(--border-radius) 0 !important;&#125;.aplayer .aplayer-miniswitcher .aplayer-icon &#123; height: 100% !important; width: 100% !important; transform: rotateY(180deg) !important; transition: all 0.3s ease !important;&#125;.aplayer .aplayer-miniswitcher .aplayer-icon path &#123; fill: #ffffff !important;&#125;.aplayer .aplayer-miniswitcher .aplayer-icon:hover path &#123; fill: var(--light-pink) !important;&#125;/* 移动端适配 */@media only screen and (max-width: 880px) &#123; .aplayer &#123; max-width: 88vw !important; border-radius: var(--border-radius-mobile) !important; margin: 20px auto !important; &#125; .aplayer .aplayer-body &#123; border-top: 3px double var(--primary-pink) !important; border-bottom: 3px double var(--primary-pink) !important; border-left: none !important; border-right: none !important; border-radius: var(--border-radius-mobile) !important; box-shadow: 0 0 15px var(--glow-pink), 0 0 20px var(--glow-purple), 0 0 25px var(--glow-blue), inset 0 0 8px var(--inner-glow) !important; &#125; .aplayer.aplayer-withlist .aplayer-list &#123; border-top: none !important; border-bottom: 3px double var(--primary-pink) !important; border-left: none !important; border-right: none !important; border-radius: 0 0 var(--border-radius-mobile) var(--border-radius-mobile) !important; max-height: var(--list-max-height-mobile) !important; overflow-y: hidden !important; scrollbar-width: none !important; -ms-overflow-style: none !important; opacity: 1 !important; transform: scaleY(1) !important; transform-origin: top !important; transition: max-height 0.5s ease-in-out, opacity 0.5s ease-in-out, transform 0.5s ease-in-out !important; &#125; .aplayer.aplayer-withlist.aplayer-list-hide .aplayer-list &#123; max-height: 0 !important; opacity: 0 !important; transform: scaleY(0.95) !important; transform-origin: top !important; transition: max-height 0.5s ease-in-out, opacity 0.5s ease-in-out, transform 0.5s ease-in-out !important; border: none !important; box-shadow: none !important; overflow: hidden !important; &#125; .aplayer.aplayer-withlist.aplayer-list-hide .aplayer-body &#123; border-top: 3px double var(--primary-pink) !important; border-bottom: 3px double var(--primary-pink) !important; border-left: none !important; border-right: none !important; border-radius: var(--border-radius-mobile) !important; box-shadow: none !important; &#125; .aplayer.aplayer-withlist.aplayer-list-hide &#123; min-height: var(--player-height) !important; height: var(--player-height) !important; border: none !important; box-shadow: none !important; &#125; .aplayer.aplayer-fixed &#123; max-width: 88vw !important; &#125; .aplayer.aplayer-fixed .aplayer-body &#123; max-width: 88vw !important; border-top: 3px double var(--primary-pink) !important; border-bottom: 3px double var(--primary-pink) !important; border-left: none !important; border-right: none !important; border-radius: var(--border-radius-mobile) var(--border-radius-mobile) 0 0 !important; &#125;&#125;/* 针对纵向屏幕的适配 */@media only screen and (orientation: portrait) &#123; .aplayer &#123; max-width: 88vw !important; border-radius: var(--border-radius-mobile) !important; margin: 20px auto !important; &#125; .aplayer .aplayer-body &#123; border-top: 3px double var(--primary-pink) !important; border-bottom: 3px double var(--primary-pink) !important; border-left: none !important; border-right: none !important; border-radius: var(--border-radius-mobile) !important; box-shadow: 0 0 15px var(--glow-pink), 0 0 20px var(--glow-purple), 0 0 25px var(--glow-blue), inset 0 0 8px var(--inner-glow) !important; &#125; .aplayer.aplayer-withlist .aplayer-list &#123; border-top: none !important; border-bottom: 3px double var(--primary-pink) !important; border-left: none !important; border-right: none !important; border-radius: 0 0 var(--border-radius-mobile) var(--border-radius-mobile) !important; max-height: var(--list-max-height-mobile) !important; overflow-y: hidden !important; scrollbar-width: none !important; -ms-overflow-style: none !important; opacity: 1 !important; transform: scaleY(1) !important; transform-origin: top !important; transition: max-height 0.5s ease-in-out, opacity 0.5s ease-in-out, transform 0.5s ease-in-out !important; &#125; .aplayer.aplayer-withlist.aplayer-list-hide .aplayer-list &#123; max-height: 0 !important; opacity: 0 !important; transform: scaleY(0.95) !important; transform-origin: top !important; transition: max-height 0.5s ease-in-out, opacity 0.5s ease-in-out, transform 0.5s ease-in-out !important; border: none !important; box-shadow: none !important; overflow: hidden !important; &#125; .aplayer.aplayer-withlist.aplayer-list-hide .aplayer-body &#123; border-top: 3px double var(--primary-pink) !important; border-bottom: 3px double var(--primary-pink) !important; border-left: none !important; border-right: none !important; border-radius: var(--border-radius-mobile) !important; box-shadow: none !important; &#125; .aplayer.aplayer-withlist.aplayer-list-hide &#123; min-height: var(--player-height) !important; height: var(--player-height) !important; border: none !important; box-shadow: none !important; &#125; .aplayer.aplayer-fixed &#123; max-width: 88vw !important; &#125; .aplayer.aplayer-fixed .aplayer-body &#123; max-width: 88vw !important; border-top: 3px double var(--primary-pink) !important; border-bottom: 3px double var(--primary-pink) !important; border-left: none !important; border-right: none !important; border-radius: var(--border-radius-mobile) var(--border-radius-mobile) 0 0 !important; &#125;&#125;/* 针对 iOS Safari 优化 */@supports (-webkit-overflow-scrolling: touch) &#123; .aplayer .aplayer-list::-webkit-scrollbar &#123; display: none !important; width: 0 !important; height: 0 !important; &#125; .aplayer .aplayer-list ol::-webkit-scrollbar &#123; width: 5px !important; height: 5px !important; display: block !important; &#125; .aplayer .aplayer-list ol::-webkit-scrollbar-track &#123; background: transparent !important; border-radius: 3px !important; &#125; .aplayer .aplayer-list ol::-webkit-scrollbar-thumb &#123; border-radius: 3px !important; background: linear-gradient(90deg, var(--primary-pink), var(--secondary-purple)) !important; &#125; .aplayer .aplayer-list ol::-webkit-scrollbar-thumb:hover &#123; background: linear-gradient(90deg, var(--secondary-purple), var(--primary-pink)) !important; &#125;&#125;/* 移除不必要的样式 */.aplayer * &#123; box-sizing: content-box !important;&#125;/* 优化动画性能 */.aplayer .aplayer-list &#123; will-change: max-height, opacity, transform !important;&#125; 目前这两个样式不支持迷你模式等风格。同时保留了ai生成的代码注释，便于根据主题对播放器色调尺寸做出调整。","categories":[{"name":"教程","slug":"教程","permalink":"http://youkiiiiii.github.io/categories/%E6%95%99%E7%A8%8B/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"http://youkiiiiii.github.io/tags/hexo/"},{"name":"APlayer","slug":"APlayer","permalink":"http://youkiiiiii.github.io/tags/APlayer/"}]},{"title":"Hexo＋GitHub搭建个人博客","slug":"hexo＋github搭建个人博客","date":"2024-11-27T13:20:46.000Z","updated":"2025-05-09T20:44:03.345Z","comments":true,"path":"2024/11/27/hexo＋github搭建个人博客/","permalink":"http://youkiiiiii.github.io/2024/11/27/hexo%EF%BC%8Bgithub%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/","excerpt":"之前试过几个hexo搭建教程，大部分都比较复杂，非技术党很难看懂。魂祈梦大佬的教程非常适合我这种不懂代码的小白，跟着步骤就可以顺利搭建。","text":"之前试过几个hexo搭建教程，大部分都比较复杂，非技术党很难看懂。魂祈梦大佬的教程非常适合我这种不懂代码的小白，跟着步骤就可以顺利搭建。 本篇转载自酷安用户魂祈梦，原文链接：hexo＋github搭建个人博客（简略省流） 前排提示，长图文警告⚠。感谢酷安@吴建国_ ，@Tianli ，哔哩哔哩@hojun_cn，@青年麦克斯韦，以及无数CSDN和博客园网友。我大概加起来整了六七个小时，如果加上之前gitee翻车，一共九小时。坚持不懈，善用百度，最终成功了。此图文只讲细节不讲原理，命令处的回车自己敲。如果报错，请耐心核对文末的报错解决方法 目录： git安装 github账号创建，搭建仓库 绑定 创建文件夹 命令（快乐报错环节） 修改_config.yml文件 查看效果 报错合集 powershell在此系统中禁止执行脚本 The authenticity of host ‘github.com (192.30.253.113)’ can’t be established. node.js卸载报错2503 长期停在rollbackFailedOptional verb xxx Permission denied (publickey) but GitHub does not provide shell access You should configure deployment settings in _config.yml first! 输入hexo d后只显示一行Validating config 如果实在有问题无法解决 git安装查看链接node.js安装下载查看链接如果直接安装一般会报错2503，所以我们用命令行win＋X，再按A（以管理员身份打开命令行）输入命令msiexec &#x2F;package 路径\\完整文件名称例msiexec &#x2F;package C：\\Download\\node-v14.17.4-x64.msi此处C：\\Download为路径，node-v14.17.4-x64.msi是名称建议全部点next，安装在D盘可能有不必要的报错（我遇到了） github账号创建，搭建仓库如果你不会注册，那还是放弃这篇图文吧（没必要）自行注册查看链接搭建仓库网站页面右上角＋号，点“New repository”在Repository name中输入与左侧相同的名称＋.github.io描述不写，勾选“Add a README file”点击下面绿色按钮创建 绑定回到桌面，点击搜索，输入git bash，打开（只要打开gitbash就行，可以在开始菜单找）输入git config –global user.name “GitHub用户名”注意空格，注意输入法切换到英文例git config –global user.name “OldSaltFish”输入git config –global user.email “github绑定邮箱”例git config –global user.email “222222222@qq.com“输入ssh-keygen -t rsa -C “邮箱如上”不例了这里多按几下回车完成后是图上这个样子然后可以关闭这个窗口了 打开C盘→用户→用户名→.ssh用记事本打开其中的id_rsa.pub文件，全选，复制，关闭浏览器github，点击右上角头像处，下面“Settings”,左侧“SSH and GPG keys”,右上角“New SSH key”,title任意填，key中粘贴，下面绿色按钮添加ssh，成功后你的邮箱会收到消息回到.ssh文件夹，空白处右键，Git Bash Here输入ssh git@github.com一般是缺少文件，输入yes再回车一般最后一行是xxxxx closed就成功了.ssh文件夹中多出一个known_hosts文件可以关闭此窗口了 创建文件夹创建一个文件夹（图方便就在桌面）打开文件夹，点击地址栏然后复制win＋x，再按A进入命令行输入cd空格然后鼠标右键，回车例cd C:\\Users\\言续\\Desktop\\blog此处文件夹名称是blog 命令（快乐报错环节）输入npm install -g hexo-cli注意是cli不是cil（我一般手打，容易错）耐心等待，这个时间很长输入hexo init输入hexo g输入hexo s到浏览器输入localhost:4000查看效果回到命令行Ctrl＋C终止，如果没反应多试一次输入git –version输入git config –global init.defaltBranch main 修改_config.yml文件之前创建的文件夹中，找到_config.yml文件，打开，此处推荐用VS code，当然记事本应该是一样的。进行介绍title:网站名称（主标题）subtitle: 副标题（可以不写）description： 网站描述keywords: 密码，一般不改auther ：作者，网站底部Powered by xxlanguage：语言，改为zh–CNtimezone：应该是时区，不用改 注意修改时每个冒号后面都要留个空格url： 网址，改http:&#x2F;&#x2F;后面的内容为用户名.github.io例查看链接鼠标滚轮到最底下type后改git回车加一行repo：注意不是rope打开浏览器，github中打开你的仓库，点击code，点击ssh，右侧复制最小化浏览器，回到编辑页面粘贴到repo回车一行branch： main最后要有一行空白（有没有用我不知道，这是规范）Ctrl＋S保存，退出，回到命令行输入npm install hexo-deployer-git –save输入hexo clean输入hexo g输入hexo d成功 查看效果打开浏览器地址栏输入用户名.github.io例OldSaltFish.github.io别急，换个浏览器，或者直接重启电脑最好重启 报错合集powershell在此系统中禁止执行脚本输入set-ExecutionPolicy RemoteSigned回车Y回车 The authenticity of host ‘github.com (192.30.253.113)’ can’t be established.yes回车 node.js卸载报错2503使用腾讯软件管家等软件卸载（系统自带的会报错） 长期停在rollbackFailedOptional verb xxx网络不太行，给magic换个节点或者使用淘宝源输入npm config set registry http://registry.npm.taobao.org之后你输入的所有命令都要吧npm改为cnpm Permission denied (publickey)一般来说是你没有在github上建立ssh就执行了ssh git@github.com仔细看看第3条，去github上添加ssh but GitHub does not provide shell access这是配置ssh显示的中间一段，其实这不是报错 You should configure deployment settings in _config.yml first!插件没装或者branch没改对输入npm install hexo-deployer-git –save打开文件夹中_config.yml把branch后面改为main 输入hexo d后只显示一行Validating config你可能没有保存_config.yml，保存后再输入hexo d 如果实在有问题无法解决卸载重装node.js，删除当初新建的文件夹（不能只删除里面的文件），重新看看哪里错了。行文框架查看链接仔细看看还是有很多不同的，我觉得我不算抄袭。教程到此结束，后续主题以及编写去看其他大佬，教程有用请给个赞。","categories":[{"name":"教程","slug":"教程","permalink":"http://youkiiiiii.github.io/categories/%E6%95%99%E7%A8%8B/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"http://youkiiiiii.github.io/tags/hexo/"},{"name":"next","slug":"next","permalink":"http://youkiiiiii.github.io/tags/next/"}]},{"title":"时间转瞬即逝","slug":"时间转瞬即逝","date":"2024-08-18T05:22:50.000Z","updated":"2025-02-10T19:49:19.593Z","comments":true,"path":"2024/08/18/时间转瞬即逝/","permalink":"http://youkiiiiii.github.io/2024/08/18/%E6%97%B6%E9%97%B4%E8%BD%AC%E7%9E%AC%E5%8D%B3%E9%80%9D/","excerpt":"当怀念某些事物时，这种感觉让我意识到，那个阶段，那个时间已经彻底结束了。 小学暑假，在乡下池塘还没有被填平时，每次骤雨落下，荷叶上总是沾满露珠，在阳光中会闪着光，傍晚天空昏红，抬头便能看到许多红色蜻蜓，后来却不知道多少年没有再看到过这样的荷叶荷花，没有再见到蜻蜓了。 现在对于夏天的记忆，不过是几阵雨而已，过去了也就过去了。","text":"当怀念某些事物时，这种感觉让我意识到，那个阶段，那个时间已经彻底结束了。 小学暑假，在乡下池塘还没有被填平时，每次骤雨落下，荷叶上总是沾满露珠，在阳光中会闪着光，傍晚天空昏红，抬头便能看到许多红色蜻蜓，后来却不知道多少年没有再看到过这样的荷叶荷花，没有再见到蜻蜓了。 现在对于夏天的记忆，不过是几阵雨而已，过去了也就过去了。","categories":[{"name":"随笔","slug":"随笔","permalink":"http://youkiiiiii.github.io/categories/%E9%9A%8F%E7%AC%94/"}],"tags":[{"name":"随笔","slug":"随笔","permalink":"http://youkiiiiii.github.io/tags/%E9%9A%8F%E7%AC%94/"}]},{"title":"中国注册LINE账号教程（2024年版本）","slug":"中国注册LINE账号教程（2024年版本）","date":"2024-07-23T11:58:22.000Z","updated":"2024-09-17T18:29:38.588Z","comments":true,"path":"2024/07/23/中国注册LINE账号教程（2024年版本）/","permalink":"http://youkiiiiii.github.io/2024/07/23/%E4%B8%AD%E5%9B%BD%E6%B3%A8%E5%86%8CLINE%E8%B4%A6%E5%8F%B7%E6%95%99%E7%A8%8B%EF%BC%882024%E5%B9%B4%E7%89%88%E6%9C%AC%EF%BC%89/","excerpt":"近期在中国地区注册LINE账号时，会弹出“所在国家或地区无法使用”提示。","text":"近期在中国地区注册LINE账号时，会弹出“所在国家或地区无法使用”提示。 解决办法很简单，首先关闭手机定位，拔出SIM卡，然后在应用详情里清除LINE的数据，并打开代理用谷歌Google账户进行注册。 如果提示注册失败，则需要重新清除LINE的数据，并找到一个能使用印尼线路的代理，连接节点后，再使用谷歌Google账户注册，一般都能成功。 另外，如果要登陆已注册的账号，会发现即使连接印尼节点，也会弹出“所在地区或国家无法使用”的提示。 可以在登录前，清除LINE的数据，并关闭手机定位和拔出手机卡，这样就可以登录了。","categories":[{"name":"教程","slug":"教程","permalink":"http://youkiiiiii.github.io/categories/%E6%95%99%E7%A8%8B/"}],"tags":[{"name":"LINE","slug":"LINE","permalink":"http://youkiiiiii.github.io/tags/LINE/"}]},{"title":"Hexo NexT 博客主题美化","slug":"Hexo-NexT-博客主题美化","date":"2024-07-16T05:57:21.000Z","updated":"2025-04-19T11:14:34.699Z","comments":true,"path":"2024/07/16/Hexo-NexT-博客主题美化/","permalink":"http://youkiiiiii.github.io/2024/07/16/Hexo-NexT-%E5%8D%9A%E5%AE%A2%E4%B8%BB%E9%A2%98%E7%BE%8E%E5%8C%96/","excerpt":"给Hexo博客换了nexT主题，由于8.0版本的部分美化教程在网上很难找到，所以直接自己动手拆文件改完了。 非技术党，代码全部由chatgpt生成，主题风格是Pisces，感兴趣的可以试一下。","text":"给Hexo博客换了nexT主题，由于8.0版本的部分美化教程在网上很难找到，所以直接自己动手拆文件改完了。 非技术党，代码全部由chatgpt生成，主题风格是Pisces，感兴趣的可以试一下。 修改头部标题栏背景色 在头部标题栏添加文字 设置博客背景图片 修改侧边栏强调色 修改超链接颜色 修改博客字体样式 修改文章标题样式 给博客添加 top 文章置顶 ## 修改头部标题栏背景色 打开 `博客根目录\\themes\\next\\source\\css\\_variables\\base.styl` 文件，查找 `theme-color` 并找到以下内容修改对应颜色码。 123//原theme-color = convert(hexo-config(&#x27;theme_color.light&#x27;));$theme-color = 对应颜色码;$theme-color-dark = convert(hexo-config(&#x27;theme_color.dark&#x27;)); $theme-color-dark 为夜间模式，也可以修改。 在头部标题栏添加文字打开 博客根目录\\themes\\next\\layout\\_partials\\header\\brand.njk 文件，查找 site-subtitle 并修改以下代码。 1&lt;p class=&quot;site-subtitle&quot; itemprop=&quot;description&quot;&gt;文字内容&lt;/p&gt; 设置博客背景图片打开 博客根目录\\themes\\next\\source\\css\\_schemes\\Pisces\\index.styl 文件，查找 .main-inner &#123; 并在上方添加以下代码。 1234body &#123; background:url(背景图片url); background-attachment: fixed;&#125; url地址可以直接填网图，也可以将图片放在 博客根目录\\themes\\next\\source\\images 文件夹内并填入对应路径。 修改侧边栏强调色针对点进文章后，对鼠标点击&#x2F;悬浮在文章目录和站点概括时的强调色进行修改。 打开 博客根目录\\themes\\next\\source\\css\\_variables\\Pisces.styl 文件，查找 $sidebar-nav-color ，修改以下内容。 12345// Sidebar// --------------------------------------------------$sidebar-nav-color = var(--text-color);$sidebar-nav-hover-color = 对应颜色码;$sidebar-highlight = 对应颜色码; $sidebar-nav-hover-color 为鼠标悬浮时的强调色。$sidebar-highlight 为鼠标点击时的强调色。 修改超链接颜色打开 博客根目录\\themes\\next\\source\\css\\_common\\components\\post\\index.styl 文件，在最下方添加以下代码。 12345678.post-body p a&#123; color: 对应颜色码; border-bottom: none; &amp;:hover &#123; color: 对应颜色码; text-decoration: underline; &#125;&#125; .post-body p a&#123; 为超链接正常显示的颜色。 &amp;:hover &#123; 为鼠标悬浮在超链接时的颜色。 修改博客字体样式打开 博客根目录\\themes\\next\\_config.yml 文件，针对以下内容进行修改。以本博客为例。 12345678910111213141516171819202122232425262728293031323334353637383940414243font: enable: true # Uri of fonts host, e.g. https://fonts.googleapis.com (Default). host: https://fonts.loli.net # Font options: # `external: true` will load this font family from `host` above. # `family: Times New Roman`. Without any quotes. # `size: x.x`. Use `em` as unit. Default: 1 (16px) # Global font settings used for all elements inside &lt;body&gt;. # body元素的字体设置 global: external: true family: LXGW WenKai Mono TC size: 1.04 # 左上角站点名称区的字体设置 # Font settings for site title (.site-title). title: external: true family: size: # 标题的基础字体设置 # Font settings for headlines (&lt;h1&gt; to &lt;h6&gt;). headings: external: true family: size: # 文章的字体设置 # Font settings for posts (.post-body). posts: external: true family: # 代码块的字体设置 # Font settings for &lt;code&gt; and code blocks. codes: external: true family: 将 font 下的 enable 由false改为true。 添加你喜欢的 host ，个人推荐 https://fonts.loli.net ，当然不改也可以，但默认的谷歌字体在某些地区可能不太容易访问。 修改 family 改变字体样式，修改 size 改变字体大小。 修改文章标题样式针对首页和文章页面中，对文章标题样式进行修改。打开 博客根目录\\source\\_data\\styles.styl 文件（没有的话就新建一个），在里面添加以下代码。 12345678910111213141516171819202122232425262728293031323334353637383940/* 首页标题样式 */.index .post-title a &#123; color: #3a5b52; /* 标题颜色 */ position: relative; /* 确保伪元素相对于标题定位 */ text-decoration: none; /* 去除默认的下划线 */ font-size: 25px; /* 标题字体大小 */ font-weight: 550; /* 字体粗细 */ line-height: 1.2; /* 行高 */ margin-bottom: 5px; /* 标题下方的外边距 */&#125;/* 首页标题下划线样式 */.index .post-title a::after &#123; content: &quot;&quot;; /* 伪元素需要有内容 */ display: block; /* 伪元素需为块级元素以便展示 */ height: 2px; /* 横线的高度 */ background-color: #3a5b52; /* 横线颜色 */ position: absolute; /* 定位伪元素 */ bottom: -3px; /* 横线和标题之间的距离 */ left: 0; width: 0; /* 初始宽度为 0 */ transition: width 0.3s ease; /* 动画效果 */&#125;/* 首页标题悬停效果 */.index .post-title a:hover::after &#123; width: 100%; /* 鼠标悬停时横线的宽度 */&#125;/* 确保其他可能影响横线的伪元素样式被移除 */.index .post-title a::before &#123; content: none; /* 确保没有黑色横线 */&#125;/* 文章页标题样式 */.post .post-title &#123; color: #3a5b52 !important; /* 强制应用颜色 */ font-size: 25px !important; /* 强制应用字体大小 */ font-weight: 550 !important; /* 强制应用字体粗细 */&#125; 以上是该博客的文章标题样式，可按照个人需求，根据注释进行修改。 给博客添加 top 文章置顶添加插件和使用方法请参考JWei Ma大神这篇教程：Next 添加 top 文章置顶而当我在设置置顶图标时，发现右侧会多出一条竖线，可能JWei Ma大神的教程不适用于 nexT 8.0 版本。于是稍微改了一部分，并且把图标设置在左边，方法如下。打开 博客根目录\\themes\\next\\layout\\_partials\\post\\post-meta.njk 文件，在第一行 &lt;div class=&quot;post-meta&quot;&gt; 下面，添加以下代码。 123456&#123;% if post.top %&#125; &lt;div style=&quot;padding-left: 8px;&quot;&gt; &lt;i class=&quot;fa fa-thumbtack&quot;&gt;&lt;/i&gt; &lt;font color= 对应颜色码 =&quot;font-weight: bold; padding-left: 4px;&quot;&gt; 置顶 &lt;/font&gt; &lt;/div&gt;&#123;% endif %&#125; 这样就可以正常显示了。","categories":[{"name":"教程","slug":"教程","permalink":"http://youkiiiiii.github.io/categories/%E6%95%99%E7%A8%8B/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"http://youkiiiiii.github.io/tags/hexo/"}]},{"title":"SanDisk Sansa Clip+刷Rockbox教程","slug":"SanDisk-Sansa-Clip-刷Rockbox教程","date":"2022-11-28T23:04:18.000Z","updated":"2025-01-29T12:39:42.359Z","comments":true,"path":"2022/11/29/SanDisk-Sansa-Clip-刷Rockbox教程/","permalink":"http://youkiiiiii.github.io/2022/11/29/SanDisk-Sansa-Clip-%E5%88%B7Rockbox%E6%95%99%E7%A8%8B/","excerpt":"闲鱼收到一个老物件，SanDisk Sansa Clip+播放器。SanDisk（闪迪）家一直以内存卡和U盘出名，没想到MP3音乐播放器也有生产过。 令人惊喜的是，这款MP3可刷入Rockbox固件，使SanDisk Sansa Clip+支持更多音乐格式，发挥出最大音质潜能，测试后发现刷入Rockbox的SanDisk Sansa Clip+在音质上几乎吊打同价位所有播放器，同时增加了不少实用功能。即使Rockbox会导致播放器续航降低，SanDisk Sansa Clip+也能坚持播放10小时以上。","text":"闲鱼收到一个老物件，SanDisk Sansa Clip+播放器。SanDisk（闪迪）家一直以内存卡和U盘出名，没想到MP3音乐播放器也有生产过。 令人惊喜的是，这款MP3可刷入Rockbox固件，使SanDisk Sansa Clip+支持更多音乐格式，发挥出最大音质潜能，测试后发现刷入Rockbox的SanDisk Sansa Clip+在音质上几乎吊打同价位所有播放器，同时增加了不少实用功能。即使Rockbox会导致播放器续航降低，SanDisk Sansa Clip+也能坚持播放10小时以上。 下面是SanDisk Sansa Clip+刷入Rockbox的教程。 下载Rockbox系统 下载SanDisk Sansa Clip+官方固件 刷入Rockbox系统 rockbox和官方系统打开方式 Sansa Clip+死机解决方法 下载Rockbox系统先在Rockbox官网下载最新3.1.5版本系统：https://www.rockbox.org/download/ 下载SanDisk Sansa Clip+官方固件在SanDisk官网下载Sansa Clip+最新01.02.18版本官方固件：https://support-cn.wd.com/app/answers/detailweb/a_id/36022 刷入Rockbox系统 把Sansa Clip+连接电脑，打开RockboxUtility.exe，先点击右上角更改，在弹出的对话框中选自动识别，如果无法识别出Sansa Clip+播放器，也可以手动选择。 回到主界面，勾选Themes，点击Customize，选择Theme4Chinese2主题，点击Select。 回到主界面，点击Install，会弹出对话框，点击OK，选择SanDisk Sansa Clip+官方固件所在位置，选定clppa.bin，点击打开。 等待安装完成，点击OK，然后断开Sansa Clip+与电脑的连接。 打开Sansa Clip+，等待系统升级完成，进行以下设置： settings—general setting—–display—default codepage—- simp chinese settings—theme setting—–browse theme files—Theme4Chinese2 settings—general setting—–language—-chinese-simp rockbox和官方系统打开方式 按顶部开机键进入rockbox系统。 长按左键+开机键进入官方系统。 Sansa Clip+死机解决方法按住电源键+菜单键（方向下）20秒左右，再重新开机。","categories":[{"name":"教程","slug":"教程","permalink":"http://youkiiiiii.github.io/categories/%E6%95%99%E7%A8%8B/"}],"tags":[{"name":"随身听","slug":"随身听","permalink":"http://youkiiiiii.github.io/tags/%E9%9A%8F%E8%BA%AB%E5%90%AC/"}]},{"title":"深夜思考","slug":"深夜思考","date":"2021-11-30T16:00:41.000Z","updated":"2025-02-10T19:49:03.097Z","comments":true,"path":"2021/12/01/深夜思考/","permalink":"http://youkiiiiii.github.io/2021/12/01/%E6%B7%B1%E5%A4%9C%E6%80%9D%E8%80%83/","excerpt":"人无法相互理解痛苦，尽管绝望到趋于崩溃，对他人而言也只是无关痛痒的程度。 在你被迫承担某种责任时，他们总是以道德渲染，以控制欲作为表达。你争吵，你歇斯底里，反反复复徒劳过后，只能以沉默和逃避相对。 不想为了这种责任而牺牲掉自我感受，不想遵从他们既定的人生，所以你只能拼命逃离，去更远更寂静无声的地方，甚至于消失在极度疲惫和绝望之中。 然后他们的怨恨多于同情，指责多于反思，但你再也不会听到＂这样对得起爱你的人吗＂这种话，这样的爱对任何人来说都是负担，而你已经不用再去承担了。 你发现，对于某些人，生命终是界限，灵魂应飘向无尽飘渺的自由。","text":"人无法相互理解痛苦，尽管绝望到趋于崩溃，对他人而言也只是无关痛痒的程度。 在你被迫承担某种责任时，他们总是以道德渲染，以控制欲作为表达。你争吵，你歇斯底里，反反复复徒劳过后，只能以沉默和逃避相对。 不想为了这种责任而牺牲掉自我感受，不想遵从他们既定的人生，所以你只能拼命逃离，去更远更寂静无声的地方，甚至于消失在极度疲惫和绝望之中。 然后他们的怨恨多于同情，指责多于反思，但你再也不会听到＂这样对得起爱你的人吗＂这种话，这样的爱对任何人来说都是负担，而你已经不用再去承担了。 你发现，对于某些人，生命终是界限，灵魂应飘向无尽飘渺的自由。","categories":[{"name":"随笔","slug":"随笔","permalink":"http://youkiiiiii.github.io/categories/%E9%9A%8F%E7%AC%94/"}],"tags":[{"name":"随笔","slug":"随笔","permalink":"http://youkiiiiii.github.io/tags/%E9%9A%8F%E7%AC%94/"}]},{"title":"早上的胡思乱想","slug":"早上的胡思乱想","date":"2021-11-30T15:58:17.000Z","updated":"2025-02-10T19:49:31.201Z","comments":true,"path":"2021/11/30/早上的胡思乱想/","permalink":"http://youkiiiiii.github.io/2021/11/30/%E6%97%A9%E4%B8%8A%E7%9A%84%E8%83%A1%E6%80%9D%E4%B9%B1%E6%83%B3/","excerpt":"最近高中时的感觉又出现了，又复杂又怀念的心情，就是在那两年我才对周围的事物产生感知，也是在那时才开始变得多愁善感。 想起了很多，早上上学去车站等车，意外看到阳光穿透叶片，路上流动的日光；傍晚坐公交回家，经过车站时，窗外拥挤堵塞的马路，昏暗中车灯亮起的光点；晚上路过公园，经过一大片树时的沁凉，和浓郁的草木气息。 还有一次走错方向，穿过巷子时，看到几个老人坐在一起晒着太阳聊天，小孩子追赶打闹，吵吵的却不会让人烦躁。当时应该是四五月份，天气很好，毛绒绒的暖和感，灰尘在阳光中浮动，天空也是很透亮的蓝色，这些都让我在略有乏味的高中生活中，体会到鲜活生动的感觉。","text":"最近高中时的感觉又出现了，又复杂又怀念的心情，就是在那两年我才对周围的事物产生感知，也是在那时才开始变得多愁善感。 想起了很多，早上上学去车站等车，意外看到阳光穿透叶片，路上流动的日光；傍晚坐公交回家，经过车站时，窗外拥挤堵塞的马路，昏暗中车灯亮起的光点；晚上路过公园，经过一大片树时的沁凉，和浓郁的草木气息。 还有一次走错方向，穿过巷子时，看到几个老人坐在一起晒着太阳聊天，小孩子追赶打闹，吵吵的却不会让人烦躁。当时应该是四五月份，天气很好，毛绒绒的暖和感，灰尘在阳光中浮动，天空也是很透亮的蓝色，这些都让我在略有乏味的高中生活中，体会到鲜活生动的感觉。","categories":[{"name":"随笔","slug":"随笔","permalink":"http://youkiiiiii.github.io/categories/%E9%9A%8F%E7%AC%94/"}],"tags":[{"name":"随笔","slug":"随笔","permalink":"http://youkiiiiii.github.io/tags/%E9%9A%8F%E7%AC%94/"}]}],"categories":[{"name":"笔记","slug":"笔记","permalink":"http://youkiiiiii.github.io/categories/%E7%AC%94%E8%AE%B0/"},{"name":"教程","slug":"教程","permalink":"http://youkiiiiii.github.io/categories/%E6%95%99%E7%A8%8B/"},{"name":"翻译","slug":"翻译","permalink":"http://youkiiiiii.github.io/categories/%E7%BF%BB%E8%AF%91/"},{"name":"随笔","slug":"随笔","permalink":"http://youkiiiiii.github.io/categories/%E9%9A%8F%E7%AC%94/"}],"tags":[{"name":"文案","slug":"文案","permalink":"http://youkiiiiii.github.io/tags/%E6%96%87%E6%A1%88/"},{"name":"新媒体运营","slug":"新媒体运营","permalink":"http://youkiiiiii.github.io/tags/%E6%96%B0%E5%AA%92%E4%BD%93%E8%BF%90%E8%90%A5/"},{"name":"投流","slug":"投流","permalink":"http://youkiiiiii.github.io/tags/%E6%8A%95%E6%B5%81/"},{"name":"数据分析","slug":"数据分析","permalink":"http://youkiiiiii.github.io/tags/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/"},{"name":"hexo","slug":"hexo","permalink":"http://youkiiiiii.github.io/tags/hexo/"},{"name":"英语","slug":"英语","permalink":"http://youkiiiiii.github.io/tags/%E8%8B%B1%E8%AF%AD/"},{"name":"英语时态","slug":"英语时态","permalink":"http://youkiiiiii.github.io/tags/%E8%8B%B1%E8%AF%AD%E6%97%B6%E6%80%81/"},{"name":"小红书","slug":"小红书","permalink":"http://youkiiiiii.github.io/tags/%E5%B0%8F%E7%BA%A2%E4%B9%A6/"},{"name":"歌词","slug":"歌词","permalink":"http://youkiiiiii.github.io/tags/%E6%AD%8C%E8%AF%8D/"},{"name":"欅坂46","slug":"欅坂46","permalink":"http://youkiiiiii.github.io/tags/%E6%AC%85%E5%9D%8246/"},{"name":"APlayer","slug":"APlayer","permalink":"http://youkiiiiii.github.io/tags/APlayer/"},{"name":"next","slug":"next","permalink":"http://youkiiiiii.github.io/tags/next/"},{"name":"随笔","slug":"随笔","permalink":"http://youkiiiiii.github.io/tags/%E9%9A%8F%E7%AC%94/"},{"name":"LINE","slug":"LINE","permalink":"http://youkiiiiii.github.io/tags/LINE/"},{"name":"随身听","slug":"随身听","permalink":"http://youkiiiiii.github.io/tags/%E9%9A%8F%E8%BA%AB%E5%90%AC/"}]}